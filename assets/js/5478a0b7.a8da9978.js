"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[3159],{28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var s=r(96540);const i={},d=s.createContext(i);function t(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(d.Provider,{value:n},e.children)}},91322:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"sql/integer","title":"Integer Operations","description":"There are four supported integer datatypes, TINYINT (8 bits),","source":"@site/docs/sql/integer.md","sourceDirName":"sql","slug":"/sql/integer","permalink":"/sql/integer","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Index of Functions and SQL Constructs Supported in Feldera SQL","permalink":"/sql/function-index"},"next":{"title":"JSON and Dynamically-Typed Value Support","permalink":"/sql/json"}}');var i=r(74848),d=r(28453);const t={},c="Integer Operations",l={},o=[{value:"Predefined functions on integer values",id:"predefined-functions-on-integer-values",level:2},{value:"Operations not supported",id:"operations-not-supported",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"integer-operations",children:"Integer Operations"})}),"\n",(0,i.jsxs)(n.p,{children:["There are four supported integer datatypes, ",(0,i.jsx)(n.code,{children:"TINYINT"})," (8 bits),\n",(0,i.jsx)(n.code,{children:"SMALLINT"})," (16 bits), ",(0,i.jsx)(n.code,{children:"INTEGER"})," (32 bits), and ",(0,i.jsx)(n.code,{children:"BIGINT"})," (64\nbits)."]}),"\n",(0,i.jsxs)(n.p,{children:["The legal operations are ",(0,i.jsx)(n.code,{children:"+"})," (plus, unary and binary), ",(0,i.jsx)(n.code,{children:"-"})," (minus,\nunary and binary), ",(0,i.jsx)(n.code,{children:"*"})," (multiplication), ",(0,i.jsx)(n.code,{children:"/"})," (division), ",(0,i.jsx)(n.code,{children:"%"}),"\n(modulus)."]}),"\n",(0,i.jsx)(n.p,{children:"Modulus involving negative numbers happens as follows:"}),"\n",(0,i.jsxs)(n.p,{children:["For: ",(0,i.jsx)(n.code,{children:"mod = x % y"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["if ",(0,i.jsx)(n.code,{children:"x >= 0"})," and ",(0,i.jsx)(n.code,{children:"y > 0"})," then: ",(0,i.jsx)(n.code,{children:"x - (floor(x / y) * y)"})]}),"\n",(0,i.jsxs)(n.li,{children:["if ",(0,i.jsx)(n.code,{children:"x >= 0"})," and ",(0,i.jsx)(n.code,{children:"y < 0"})," then: ",(0,i.jsx)(n.code,{children:"x % abs(y)"})]}),"\n",(0,i.jsxs)(n.li,{children:["if ",(0,i.jsx)(n.code,{children:"x < 0"})," and ",(0,i.jsx)(n.code,{children:"y > 0"})," then: ",(0,i.jsx)(n.code,{children:"- abs(x) % y"})]}),"\n",(0,i.jsxs)(n.li,{children:["if ",(0,i.jsx)(n.code,{children:"x < 0"})," and ",(0,i.jsx)(n.code,{children:"y > 0"})," then: ",(0,i.jsx)(n.code,{children:"- abs(x) % abs(y)"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("caption",{children:"mod = x % y"}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"x"}),(0,i.jsx)("th",{children:"y"}),(0,i.jsx)("th",{children:"mod"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:" 8 "}),(0,i.jsx)("td",{children:" 3 "}),(0,i.jsx)("td",{children:" 2 "})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"  8 "}),(0,i.jsx)("td",{children:" -3 "}),(0,i.jsx)("td",{children:"  2 "})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:" -8 "}),(0,i.jsx)("td",{children:"  3 "}),(0,i.jsx)("td",{children:" -2 "})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:" -8 "}),(0,i.jsx)("td",{children:" -3 "}),(0,i.jsx)("td",{children:" -2 "})]})]}),"\n",(0,i.jsx)(n.p,{children:"Casting a string to an integer type will produce a runtime error if the\nstring cannot be interpreted as a number."}),"\n",(0,i.jsx)(n.p,{children:"Division or modulus by zero cause a runtime error."}),"\n",(0,i.jsx)(n.p,{children:"Operations that cause integer overflow or underflow (example: multiplication or division\nof minimum integer value by -1) produce run time errors."}),"\n",(0,i.jsx)(n.h2,{id:"predefined-functions-on-integer-values",children:"Predefined functions on integer values"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("caption",{children:"Predefined functions on integer values"}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Function"}),(0,i.jsx)("th",{children:"Description"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsxs)("td",{children:[(0,i.jsx)("a",{id:"abs"}),(0,i.jsx)("code",{children:"ABS(value)"})]}),(0,i.jsx)("td",{children:"return absolute value."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsxs)("td",{children:[(0,i.jsx)("a",{id:"mod"}),(0,i.jsx)("code",{children:"MOD(left, right)"})]}),(0,i.jsxs)("td",{children:["integer modulus. Same as ",(0,i.jsx)("code",{children:"left % right"}),"."]})]}),(0,i.jsxs)("tr",{children:[(0,i.jsxs)("td",{children:[(0,i.jsx)("a",{id:"sequence"}),(0,i.jsx)("code",{children:"SEQUENCE(start, end)"})]}),(0,i.jsx)("td",{children:"returns an array of integers from start to end (inclusive). If end < start, an empty array is returned. If any of the arguments are NULL, NULL is returned."})]})]}),"\n",(0,i.jsx)(n.h2,{id:"operations-not-supported",children:"Operations not supported"}),"\n",(0,i.jsxs)(n.p,{children:["Non-deterministic functions, such as ",(0,i.jsx)(n.code,{children:"RAND"})," are currently not\nsupported in DBSP."]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);