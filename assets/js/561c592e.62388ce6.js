"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[7155],{6229:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/datafusion-3e0ce632149533830e8cb32f958ddd10.png"},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var r=i(96540);const s={},a=r.createContext(s);function t(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(a.Provider,{value:n},e.children)}},34414:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"sql/ad-hoc","title":"Ad-hoc SQL Queries","description":"You can run ad-hoc SQL queries on a running or paused pipeline. Unlike Feldera SQL programs that define pipelines and","source":"@site/docs/sql/ad-hoc.md","sourceDirName":"sql","slug":"/sql/ad-hoc","permalink":"/sql/ad-hoc","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Mutually-Recursive Queries","permalink":"/sql/recursion"},"next":{"title":"Time-Series Extensions","permalink":"/sql/streaming"}}');var s=i(74848),a=i(28453);const t={},l="Ad-hoc SQL Queries",d={},o=[{value:"Limitations",id:"limitations",level:2},{value:"Differences between Feldera SQL and Ad-hoc Queries",id:"differences-between-feldera-sql-and-ad-hoc-queries",level:3},{value:"Usage",id:"usage",level:2},{value:"Feldera Web Console",id:"feldera-web-console",level:3},{value:"Feldera CLI",id:"feldera-cli",level:3},{value:"Feldera Python SDK",id:"feldera-python-sdk",level:3},{value:"REST API",id:"rest-api",level:3},{value:"Architecture",id:"architecture",level:2},{value:"Examples",id:"examples",level:2},{value:"Inserting Complex Data Types",id:"inserting-complex-data-types",level:3},{value:"See also",id:"see-also",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"ad-hoc-sql-queries",children:"Ad-hoc SQL Queries"})}),"\n",(0,s.jsxs)(n.p,{children:["You can run ad-hoc SQL queries on a running or paused pipeline. Unlike Feldera SQL programs that define pipelines and\nare evaluated incrementally, ad-hoc queries are evaluated in batch mode,\nusing the ",(0,s.jsx)(n.a,{href:"https://datafusion.apache.org",children:"datafusion engine"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Ad-hoc queries provide a way to query the state of a ",(0,s.jsx)(n.a,{href:"/sql/materialized",children:"materialized"})," tables and views. They are designed to aid\ndevelopment and debugging, so you need to be aware of their limitations to avoid potential confusion."]}),"\n",(0,s.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Tables and views are only accessible to ",(0,s.jsx)(n.code,{children:"SELECT"})," ad-hoc queries if they are declared as ",(0,s.jsx)(n.a,{href:"/sql/materialized",children:"materialized"}),"."]})}),"\n",(0,s.jsx)(n.p,{children:"As of now, there are differences between the SQL dialects of Feldera SQL programs and ad-hoc queries.\nThis is because they use different engines (Apache Calcite for Feldera SQL vs. Apache Datafusion for ad-hoc queries).\nSee below for some examples."}),"\n",(0,s.jsxs)(n.p,{children:["Currently, only ",(0,s.jsx)(n.code,{children:"SELECT"})," and ",(0,s.jsx)(n.code,{children:"INSERT"})," statements are supported. You can not create or alter tables and views using\nad-hoc SQL."]}),"\n",(0,s.jsx)(n.h3,{id:"differences-between-feldera-sql-and-ad-hoc-queries",children:"Differences between Feldera SQL and Ad-hoc Queries"}),"\n",(0,s.jsx)(n.p,{children:"For the common subset of SQL, results should be consistent, aside from minor differences\nlike floating-point rounding or decimal precision handling."}),"\n",(0,s.jsx)(n.p,{children:"However, there are some known, notable differences in the SQL dialect between Feldera SQL and\nad-hoc queries that need to be taken into account:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The order of output rows is non-deterministic in both dialects without the ",(0,s.jsx)(n.code,{children:"ORDER BY"})," clause."]}),"\n",(0,s.jsx)(n.li,{children:"Feldera SQL ignores the outermost order by clause."}),"\n",(0,s.jsxs)(n.li,{children:["Feldera SQL's ",(0,s.jsx)(n.code,{children:"TIMESTAMP_TRUNC(x, MINUTE)"})," is ",(0,s.jsx)(n.code,{children:"DATE_TRUNC('MINUTE', x)"})," in ad-hoc queries."]}),"\n",(0,s.jsxs)(n.li,{children:["Feldera SQL's ",(0,s.jsx)(n.code,{children:"SORT_ARRAY()"})," is ",(0,s.jsx)(n.code,{children:"ARRAY_SORT()"})," in ad-hoc queries."]}),"\n",(0,s.jsxs)(n.li,{children:["Casting integers to timestamp conversion is interpreted as seconds in ad-hoc SQL and as milliseconds\nin Feldera SQL.\n(",(0,s.jsx)(n.code,{children:"SELECT 1729595568::TIMESTAMP;"})," will yield ",(0,s.jsx)(n.code,{children:"2024-10-22T11:12:48"})," in ad-hoc queries and\n",(0,s.jsx)(n.code,{children:"1970-01-21 00:26:35"})," in Feldera SQL)."]}),"\n",(0,s.jsx)(n.li,{children:"Ad-hoc SQL can not perform as-of joins."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"We will continue to improve the consistency between the two engines in future releases."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.p,{children:"Ad-hoc queries can be executed via different Feldera tools both when the pipeline is running or paused."}),"\n",(0,s.jsx)(n.h3,{id:"feldera-web-console",children:"Feldera Web Console"}),"\n",(0,s.jsxs)(n.p,{children:['You can issue ad-hoc queries by opening the "Ad-hoc query" tab of the pipeline and typing a SQL ',(0,s.jsx)(n.code,{children:"SELECT"})," or ",(0,s.jsx)(n.code,{children:"INSERT"}),"\nquery in the input text field. To submit the query, press ",(0,s.jsx)(n.code,{children:"Enter"})," or the Play ",(0,s.jsx)("icon",{icon:"bx:play"})," button next\nto the query. To start a new line, press ",(0,s.jsx)(n.code,{children:"Shift + Enter"}),". After successful execution of the query you will see a table\ncontaining the results. You can abort a long-running query by clicking the Stop ",(0,s.jsx)("icon",{icon:"bx:play"})," button or\npressing ",(0,s.jsx)(n.code,{children:"Ctrl + C"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Browsing a materialized view in the Web Console",src:i(64498).A+"",width:"1566",height:"677"})}),"\n",(0,s.jsx)(n.h3,{id:"feldera-cli",children:"Feldera CLI"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'fda exec pipeline-name "SELECT * FROM materialized_view;"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat query.sql | fda exec pipeline-name -s\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Alternatively, you can enter the ",(0,s.jsx)(n.code,{children:"fda shell"})," command to open an interactive shell and execute queries."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"fda shell pipeline-name\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Refer to ",(0,s.jsx)(n.a,{href:"/interface/cli",children:"CLI docs"})," for more details."]}),"\n",(0,s.jsx)(n.h3,{id:"feldera-python-sdk",children:"Feldera Python SDK"}),"\n",(0,s.jsxs)(n.p,{children:["You can execute adhoc queries via the Python SDK using the ",(0,s.jsx)(n.a,{href:"pathname:///python/feldera.html#feldera.pipeline.Pipeline.query",children:".query"})," method, which returns a generator of Python Dictionaries:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'gen_obj = pipeline.query("SELECT * FROM materialized_view;")\noutput = list(gen_obj)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["There are variations of the ",(0,s.jsx)(n.code,{children:".query"})," method that return response in different formats:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"pathname:///python/feldera.html#feldera.pipeline.Pipeline.query_tabular",children:".query_tabular"}),"\nReturns a generator of ",(0,s.jsx)(n.code,{children:"String"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"pathname:///python/feldera.html#feldera.pipeline.Pipeline.query_parquet",children:".query_parquet"}),"\nSaves the output of this query to the parquet file."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For ",(0,s.jsx)(n.code,{children:"INSERT"})," queries it is recommended to use the ",(0,s.jsx)(n.a,{href:"pathname:///python/feldera.html#feldera.pipeline.Pipeline.execute",children:"execute"})," method:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'pipeline.execute("INSERT INTO tbl VALUES(1, 2, 3);")\n'})}),"\n",(0,s.jsx)(n.h3,{id:"rest-api",children:"REST API"}),"\n",(0,s.jsxs)(n.p,{children:["Consult the ",(0,s.jsx)(n.a,{href:"/api/execute-an-ad-hoc-sql-query-in-a-running-or-paused-pipeline",children:"query endpoint"})," reference to run ad-hoc queries directly through the API."]}),"\n",(0,s.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsxs)(n.p,{children:["Ad-hoc queries are evaluated using the Apache Datafusion SQL engine against a consistent snapshot of the pipeline's\ntables and views. This is achieved using a form of ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Multiversion_concurrency_control",children:"Multiversion concurrency control"}),".\nThe datafusion engine reads data directly from the pipeline's storage layer, which is shared with the\nFeldera SQL engine."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Architectural Diagram Showing the Datafusion SQL engine in the Feldera pipeline",src:i(6229).A+"",width:"750",height:"566"})}),"\n",(0,s.jsx)(n.p,{children:"Ad-hoc queries can use CPU resources, memory and, to a lesser extent, storage (for intermediate results),\nespecially if they are complex or involve scanning large datasets. Since these resources are shared with the\nFeldera SQL engine, such queries may reduce pipeline performance during ad-hoc query execution."}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"inserting-complex-data-types",children:"Inserting Complex Data Types"}),"\n",(0,s.jsx)(n.p,{children:"Given the following Feldera SQL program:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"create type struct_typ as (\n  a int,\n  b varchar\n);\n\ncreate table complex_types (\n    a int array not null,\n    b struct_typ not null,\n    json variant not null,\n    m map<varchar, int>,\n    tup row(one int not null, two int not null)\n) with ('materialized' = 'true');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["An ad-hoc query to insert data into the ",(0,s.jsx)(n.code,{children:"complex_types"})," table would look like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"insert into complex_types values ([1,2,3], struct(2, 'b'), '{\"field\": 3}', MAP(['answer'], [42]), struct(2, 3));\n"})}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Blog post ",(0,s.jsx)(n.a,{href:"https://www.feldera.com/blog/inspecting-feldera-pipelines",children:"on inspecting Feldera Pipelines"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Tutorial using the ",(0,s.jsx)(n.a,{href:"/tutorials/basics/part1",children:"Feldera Web Console"})," to run ad-hoc queries."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},64498:(e,n,i)=>{i.d(n,{A:()=>r});const r=i.p+"assets/images/materialized-1-d2b157d15aa11b0b8a78355b9300672e.png"}}]);