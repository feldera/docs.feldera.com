"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[1161],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var s=t(96540);const r={},i=s.createContext(r);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:n},e.children)}},36493:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"get-started/enterprise/https","title":"HTTPS","description":"This document describes how to configure the endpoints of Feldera components (API server, compiler,","source":"@site/docs/get-started/enterprise/https.md","sourceDirName":"get-started/enterprise","slug":"/get-started/enterprise/https","permalink":"/get-started/enterprise/https","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Okta SSO","permalink":"/get-started/enterprise/authentication/okta-sso"},"next":{"title":"Guides and Tutorials","permalink":"/tutorials/"}}');var r=t(74848),i=t(28453);const l={},c="HTTPS",o={},d=[{value:"Certificate",id:"certificate",level:2},{value:"Certificate structure",id:"certificate-structure",level:3},{value:"Example (self-signed)",id:"example-self-signed",level:3},{value:"Configure Kubernetes",id:"configure-kubernetes",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"https",children:"HTTPS"})}),"\n",(0,r.jsx)(n.p,{children:"This document describes how to configure the endpoints of Feldera components (API server, compiler,\nrunner, pipelines) to serve HTTPS in the Enterprise edition."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The same certificate (and thus private key) are used by all components"}),"\n",(0,r.jsxs)(n.li,{children:["Authentication (e.g., mTLS) is currently not yet supported (besides for the\n",(0,r.jsx)(n.a,{href:"/get-started/enterprise/authentication/",children:"existing authentication methods of the API server"}),")"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["This document does not apply to the connection to the Postgres database used by the control plane,\nwhich can be ",(0,r.jsx)(n.a,{href:"/get-started/enterprise/helm-guide",children:"configured separately"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"Before switching an existing Feldera installation to using HTTPS, it is required to stop\nall existing running pipelines because otherwise the still running pipelines will continue\nto serve their HTTP endpoint -- which the runner will no longer be able to communicate with\nas it expects HTTPS. The pipelines will need to be recompiled."})}),"\n",(0,r.jsx)(n.h2,{id:"certificate",children:"Certificate"}),"\n",(0,r.jsx)(n.p,{children:"A certificate and associated private key need to be generated for the relevant hostnames."}),"\n",(0,r.jsx)(n.h3,{id:"certificate-structure",children:"Certificate structure"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The Feldera components communicate with each other in Kubernetes using the\n",(0,r.jsx)(n.code,{children:"SERVICE.NAMESPACE.svc.cluster.local"})," hostnames."]}),"\n",(0,r.jsxs)(n.li,{children:["As such, a single certificate should be generated for the wildcard hostname\n",(0,r.jsx)(n.code,{children:"*.NAMESPACE.svc.cluster.local"})]}),"\n",(0,r.jsxs)(n.li,{children:["(Optional) When using ",(0,r.jsx)(n.code,{children:"kubectl"})," port forwarding, it is also useful to add\nhostname ",(0,r.jsx)(n.code,{children:"localhost"})," and/or ",(0,r.jsx)(n.code,{children:"127.0.0.1"})," to the certificate"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-self-signed",children:"Example (self-signed)"}),"\n",(0,r.jsxs)(n.p,{children:["For example, suppose that we install Feldera in namespace ",(0,r.jsx)(n.code,{children:"feldera"})," and will\nbe using ",(0,r.jsx)(n.code,{children:"kubectl"})," port forwarding."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.code,{children:"x509_v3.ext"})," to specify the SANs (Subject Alternative Names):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[x509_v3]\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = localhost\nDNS.2 = *.feldera.svc.cluster.local\nIP.1 = 127.0.0.1\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Generate the certificate and private key using ",(0,r.jsx)(n.code,{children:"openssl"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"openssl req -x509 -newkey rsa:4096 -nodes \\\n  -keyout tls.key -out tls.crt -days 365 \\\n  -subj '/CN=localhost' -config x509_v3.ext -extensions x509_v3\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["This will create the ",(0,r.jsx)(n.code,{children:"tls.key"})," and ",(0,r.jsx)(n.code,{children:"tls.crt"})," files."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configure-kubernetes",children:"Configure Kubernetes"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create the Kubernetes TLS Secret (e.g., in namespace ",(0,r.jsx)(n.code,{children:"feldera"}),", and named ",(0,r.jsx)(n.code,{children:"feldera-https-config"}),")\nwith the local ",(0,r.jsx)(n.code,{children:"tls.key"})," and ",(0,r.jsx)(n.code,{children:"tls.crt"})," files:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl create -n feldera secret tls feldera-https-config --key tls.key --cert tls.crt\n"})}),"\n",(0,r.jsx)(n.p,{children:"The secret (i.e., certificate and key) will be mounted as a directory with corresponding files\nby each of the Feldera component (API server, compiler, runner, pipelines) pods."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Provide in the Helm installation the reference for the ",(0,r.jsx)(n.code,{children:"httpsSecretRef"})," value."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Via file ",(0,r.jsx)(n.code,{children:"values.yaml"}),":"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'httpsSecretRef: "feldera-https-config"\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"In the command:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'helm upgrade --install feldera \\\n  ... \\\n  --set httpsSecretRef="feldera-https-config"\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"(Optional) Port forward:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"kubectl port-forward -n feldera svc/feldera-api-server 8080:8080\n"})}),"\n",(0,r.jsxs)(n.p,{children:["... and then open in the browser: ",(0,r.jsx)(n.a,{href:"https://localhost:8080",children:"https://localhost:8080"})]}),"\n",(0,r.jsx)(n.p,{children:"Note that the certificate will need to be trusted to not encounter\nerrors about an insecure connection (or self-signed certificates).\nFor example, when using curl:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"curl --cacert tls.crt https://localhost:8080/v0/pipelines\n"})}),"\n",(0,r.jsxs)(n.p,{children:['It is no longer possible to reach the endpoints via HTTP.\nAttempting to do so will result in a failure to parse the HTTPS response;\nthis will for example elicit error messages such as\n"localhost sent an invalid response" (Chrome) or\n"Received HTTP/0.9 when not allowed" (curl).\nUse ',(0,r.jsx)(n.code,{children:"https://"})," as the protocol."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);