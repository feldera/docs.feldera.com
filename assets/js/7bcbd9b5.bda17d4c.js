"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[1361],{13800:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/table-insert-4cacec24cda502ffd56e90c69d65f9ca.png"},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var s=n(96540);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}},37517:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/adults-e4fe0d7d24846242e30420e85629647f.png"},44172:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"tutorials/debugging-sql","title":"Testing your first SQL program","description":"In this section, we demonstrate how to debug a new SQL program with the","source":"@site/docs/tutorials/debugging-sql.md","sourceDirName":"tutorials","slug":"/tutorials/debugging-sql","permalink":"/tutorials/debugging-sql","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var o=n(74848),r=n(28453);const i={},a="Testing your first SQL program",c={},d=[];function l(e){const t={code:"code",h1:"h1",header:"header",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"testing-your-first-sql-program",children:"Testing your first SQL program"})}),"\n",(0,o.jsx)(t.p,{children:"In this section, we demonstrate how to debug a new SQL program with the\nWebConsole. We are reusing the code from the previous tutorial as an example:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-sql",children:"CREATE TABLE Person\n(\n    name    VARCHAR,\n    age     INT,\n    present BOOLEAN\n) with ('materialized' = 'true');\nCREATE MATERIALIZED VIEW Adult AS SELECT Person.name, Person.age FROM Person WHERE Person.age > 18;\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Enter the code in the SQL editor. Once the program compiled successfully, (as\nindicated by the green ",(0,o.jsx)(t.code,{children:"SUCCESS"})," badge in the UI editor), you can go to the\npipeline builder and create a new pipeline by giving it a name and selecting the\nprogram you just added. There is no need to define or attach any connectors to\nit."]}),"\n",(0,o.jsxs)(t.p,{children:["Next, go to pipeline management and press the ",(0,o.jsx)("icon",{icon:"bx:play-circle"}),"\nbutton to start the pipeline. Once the pipeline has started, on the left side of\nthe row, press the downward arrow ",(0,o.jsx)("icon",{icon:"material-symbols:expand-more"}),"\nto expand."]}),"\n",(0,o.jsxs)(t.p,{children:["To test the program, you can send data to it directly through the UI.\nPress the ",(0,o.jsx)("icon",{icon:"bx:upload"})," button on the right end of the ",(0,o.jsx)(t.code,{children:"Person"})," table. A new page\nopens with a table that is empty:"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Table Insert",src:n(13800).A+"",width:"2454",height:"778"})}),"\n",(0,o.jsxs)(t.p,{children:["You can press the Generate 1 Random Row or Generate 5 Random Rows buttons to\nfill the table with data. You can also configure more precisely what random\ndata is generated for every field by opening the ",(0,o.jsx)(t.code,{children:"RNG Settings"}),":"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"RNG Settings",src:n(97249).A+"",width:"1828",height:"1290"})}),"\n",(0,o.jsxs)(t.p,{children:["Once you are happy with the generated rows (you can edit them after generation\nby double clicking the cells in the table), press ",(0,o.jsx)(t.code,{children:"INSERT ROWS"})," which persists\nthe your rows in the table. Switch the tab from ",(0,o.jsx)(t.code,{children:"INSERT NEW ROWS"})," to ",(0,o.jsx)(t.code,{children:"BROWSE PERSON"})," to see the content you just added in the table. If you have multiple\ntables in the program, you can repeat this process until you filled all tables\nwith content."]}),"\n",(0,o.jsxs)(t.p,{children:["Finally, inspect the views of your program to verify if the data that shows up\nis correct. In our example, we would only want to see the rows from ",(0,o.jsx)(t.code,{children:"Person"}),"\nwhere the ",(0,o.jsx)(t.code,{children:"age"})," is over 18."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Showing the Adults relation",src:n(37517).A+"",width:"1936",height:"566"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},97249:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/rng-settings-5c44dc742ade9639fce8f6255016ec73.png"}}]);