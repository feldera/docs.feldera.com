"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[4540],{28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var t=r(96540);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}},37936:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"connectors/sources/http-get","title":"HTTP GET (URL) input connector","description":"Feldera can ingest data from a user-provided URL into a SQL table.","source":"@site/docs/connectors/sources/http-get.md","sourceDirName":"connectors/sources","slug":"/connectors/sources/http-get","permalink":"/connectors/sources/http-get","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"HTTP","permalink":"/connectors/sources/http"},"next":{"title":"Delta Lake","permalink":"/connectors/sources/delta"}}');var s=r(74848),o=r(28453);const i={},a="HTTP GET (URL) input connector",c={},l=[{value:"Example usage",id:"example-usage",level:2},{value:"SQL example file",id:"sql-example-file",level:3},{value:"curl",id:"curl",level:3},{value:"Python (direct API calls)",id:"python-direct-api-calls",level:3},{value:"Additional resources",id:"additional-resources",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"http-get-url-input-connector",children:"HTTP GET (URL) input connector"})}),"\n",(0,s.jsx)(n.p,{children:"Feldera can ingest data from a user-provided URL into a SQL table."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The file is fetched using HTTP with the GET method."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The HTTP GET input connector supports ",(0,s.jsx)(n.a,{href:"/pipelines/fault-tolerance",children:"fault\ntolerance"}),".  Fault tolerance only makes sense for\nURLs with static, unchanging data."]}),"\n",(0,s.jsx)(n.h2,{id:"example-usage",children:"Example usage"}),"\n",(0,s.jsx)(n.p,{children:"We will create a pipeline with an HTTP GET connector."}),"\n",(0,s.jsxs)(n.p,{children:["The file is hosted at ",(0,s.jsx)(n.code,{children:"https://example.com/tools-data.json"}),",\nand is in ",(0,s.jsx)(n.a,{href:"/formats/json#encoding-multiple-changes",children:"newline-delimited JSON (NDJSON) format"}),"\nwith one row per line. For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'{"insert": {"pid": 0, "name": "hammer", "price": 5}}\n{"insert": {"pid": 1, "name": "nail", "price": 0.02}}\n{"delete": {"pid": 0}}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"sql-example-file",children:"SQL example file"}),"\n",(0,s.jsxs)(n.p,{children:["Create a file named ",(0,s.jsx)(n.strong,{children:"program.sql"})," with the following content:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'CREATE TABLE price (\n    pid BIGINT NOT NULL PRIMARY KEY,\n    name VARCHAR NOT NULL,\n    price DECIMAL\n)\nWITH (\'connectors\' = \'[{\n    "transport": {\n        "name": "url_input",\n        "config": {"path": "https://example.com/tools-data.json"}\n    },\n    "format": {\n        "name": "json",\n        "config": {\n            "update_format": "insert_delete",\n            "array": false\n        }\n    }\n}]\');\n'})}),"\n",(0,s.jsx)(n.h3,{id:"curl",children:"curl"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -i -X PUT http://127.0.0.1:8080/v0/pipelines/workshop \\\n-H \'Content-Type: application/json\' \\\n-d "$(jq -Rsn \\\n  --rawfile code program.sql \\\n  \'{\n    name: "workshop",\n    description: "Workshop inventory",\n    runtime_config: {\n      workers: 4\n    },\n    program_config: {},\n    program_code: $code\n  }\')"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"python-direct-api-calls",children:"Python (direct API calls)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import requests\n\napi_url = "http://127.0.0.1:8080"\nheaders = { "authorization": f"Bearer <API-KEY>" }\nrequests.put(\n    f"{api_url}/v0/pipelines/workshop",\n    headers=headers,\n    json={\n      "name": "workshop",\n      "description": "Workshop inventory",\n      "runtime_config": {\n        "workers": 4\n      },\n      "program_config": {},\n      "program_code": open("program.sql").read()\n    }\n).raise_for_status()\n'})}),"\n",(0,s.jsx)(n.h2,{id:"additional-resources",children:"Additional resources"}),"\n",(0,s.jsx)(n.p,{children:"For more information, see:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/tutorials/basics/part3#step-1-configure-https-get-connectors",children:"Tutorial section"})," which involves\ncreating an HTTP GET connector."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Data formats such as ",(0,s.jsx)(n.a,{href:"/formats/json",children:"JSON"}),",\n",(0,s.jsx)(n.a,{href:"/formats/csv",children:"CSV"}),", and ",(0,s.jsx)(n.a,{href:"/formats/parquet",children:"Parquet"})]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);