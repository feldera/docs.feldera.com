"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[835],{28453:(e,i,t)=>{t.d(i,{R:()=>d,x:()=>a});var n=t(96540);const s={},r=n.createContext(s);function d(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(r.Provider,{value:i},e.children)}},70034:(e,i,t)=>{t.r(i),t.d(i,{contentTitle:()=>a,default:()=>c,frontMatter:()=>d,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"type":"api","id":"start-the-pipeline-asynchronously-by-updating-the-desired-status","title":"Start the pipeline asynchronously by updating the desired status.","description":"","slug":"/start-the-pipeline-asynchronously-by-updating-the-desired-status","frontMatter":{},"api":{"tags":["Pipeline management"],"description":"The endpoint returns immediately after setting the desired status.\\nThe procedure to get to the desired status is performed asynchronously.\\nProgress should be monitored by polling the pipeline `GET` endpoints.\\n\\nNote the following:\\n- A stopped pipeline can be started through calling `/start?initial=running`,\\n`/start?initial=paused`, or `/start?initial=standby`.\\n- If the pipeline is already (being) started (provisioned), it will still return success\\n- It is not possible to call `/start` when the pipeline has already had `/stop` called and is\\nin the process of suspending or stopping.","operationId":"post_pipeline_start","parameters":[{"name":"pipeline_name","in":"path","description":"Unique pipeline name","required":true,"schema":{"type":"string"}},{"name":"initial","in":"query","description":"The `initial` parameter determines whether to after provisioning the pipeline make it\\nbecome `standby`, `paused` or `running` (only valid values).","required":false,"schema":{"type":"string"}}],"responses":{"202":{"description":"Action is accepted and is being performed"},"400":{"description":"Action could not be performed","content":{"application/json":{"schema":{"type":"object","description":"Information returned by REST API endpoints on error.","required":["message","error_code","details"],"properties":{"details":{"type":"object","description":"Detailed error metadata.\\nThe contents of this field is determined by `error_code`."},"error_code":{"type":"string","description":"Error code is a string that specifies this error type.","example":"CodeSpecifyingErrorType"},"message":{"type":"string","description":"Human-readable error message.","example":"Explanation of the error that occurred."}}},"example":{"message":"Deployment resources status (current: \'Stopping\', desired: \'Stopped\') cannot have desired changed to \'Provisioned\'. Cannot restart the pipeline while it is stopping. Wait for it to stop before starting a new instance of the pipeline.","error_code":"IllegalPipelineAction","details":{"status":"Stopping","current_desired_status":"Stopped","new_desired_status":"Provisioned","hint":"Cannot restart the pipeline while it is stopping. Wait for it to stop before starting a new instance of the pipeline."}}}}},"404":{"description":"Pipeline with that name does not exist","content":{"application/json":{"schema":{"type":"object","description":"Information returned by REST API endpoints on error.","required":["message","error_code","details"],"properties":{"details":{"type":"object","description":"Detailed error metadata.\\nThe contents of this field is determined by `error_code`."},"error_code":{"type":"string","description":"Error code is a string that specifies this error type.","example":"CodeSpecifyingErrorType"},"message":{"type":"string","description":"Human-readable error message.","example":"Explanation of the error that occurred."}}},"example":{"message":"Unknown pipeline name \'non-existent-pipeline\'","error_code":"UnknownPipelineName","details":{"pipeline_name":"non-existent-pipeline"}}}}},"500":{"description":"","content":{"application/json":{"schema":{"type":"object","description":"Information returned by REST API endpoints on error.","required":["message","error_code","details"],"properties":{"details":{"type":"object","description":"Detailed error metadata.\\nThe contents of this field is determined by `error_code`."},"error_code":{"type":"string","description":"Error code is a string that specifies this error type.","example":"CodeSpecifyingErrorType"},"message":{"type":"string","description":"Human-readable error message.","example":"Explanation of the error that occurred."}}}}}}},"security":[{"JSON web token (JWT) or API key":[]}],"method":"post","path":"/v0/pipelines/{pipeline_name}/start","securitySchemes":{"JSON web token (JWT) or API key":{"type":"http","scheme":"bearer","bearerFormat":"JWT","description":"Use a JWT token obtained via an OAuth2/OIDC\\n                               login workflow or an API key obtained via\\n                               the `/v0/api-keys` endpoint."}},"info":{"title":"Feldera API","description":"\\nWith Feldera, users create data pipelines out of SQL programs.\\nA SQL program comprises tables and views, and includes as well the definition of\\ninput and output connectors for each respectively. A connector defines a data\\nsource or data sink to feed input data into tables or receive output data\\ncomputed by the views respectively.\\n\\n## Pipeline\\n\\nThe API is centered around the **pipeline**, which most importantly consists\\nout of the SQL program, but also has accompanying metadata and configuration parameters\\n(e.g., compilation profile, number of workers, etc.).\\n\\n* A pipeline is identified and referred to by its user-provided unique name.\\n* The pipeline program is asynchronously compiled when the pipeline is first created or\\n  when its program is subsequently updated.\\n* Pipeline deployment is only possible once the program is successfully compiled.\\n* A pipeline cannot be updated while it is deployed.\\n\\n## Concurrency\\n\\nEach pipeline has a version, which is incremented each time its core fields are updated.\\nThe version is monotonically increasing. There is additionally a program version which covers\\nonly the program-related core fields, and is used by the compiler to discern when to recompile.","contact":{"name":"Feldera Team","email":"dev@feldera.com"},"license":{"name":"MIT OR Apache-2.0"},"version":"0.148.0"},"postman":{"name":"Start the pipeline asynchronously by updating the desired status.","description":{"content":"The endpoint returns immediately after setting the desired status.\\nThe procedure to get to the desired status is performed asynchronously.\\nProgress should be monitored by polling the pipeline `GET` endpoints.\\n\\nNote the following:\\n- A stopped pipeline can be started through calling `/start?initial=running`,\\n`/start?initial=paused`, or `/start?initial=standby`.\\n- If the pipeline is already (being) started (provisioned), it will still return success\\n- It is not possible to call `/start` when the pipeline has already had `/stop` called and is\\nin the process of suspending or stopping.","type":"text/plain"},"url":{"path":["v0","pipelines",":pipeline_name","start"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"description":{"content":"The `initial` parameter determines whether to after provisioning the pipeline make it\\nbecome `standby`, `paused` or `running` (only valid values).","type":"text/plain"},"key":"initial","value":"<string>"}],"variable":[{"disabled":false,"description":{"content":"(Required) Unique pipeline name","type":"text/plain"},"type":"any","value":"<string>","key":"pipeline_name"}]},"header":[{"key":"Accept","value":"application/json"}],"method":"POST","auth":{"type":"bearer","bearer":[{"type":"any","value":"{{bearerToken}}","key":"token"}]}}},"source":"@site/../openapi.json","sourceDirName":".","permalink":"/api/start-the-pipeline-asynchronously-by-updating-the-desired-status","previous":{"title":"Requests the pipeline to resume, which it will do asynchronously.","permalink":"/api/requests-the-pipeline-to-resume-which-it-will-do-asynchronously"},"next":{"title":"Start a transaction.","permalink":"/api/start-a-transaction"}}');var s=t(74848),r=t(28453);const d={},a="Start the pipeline asynchronously by updating the desired status.",l=[];function o(e){const i={code:"code",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"start-the-pipeline-asynchronously-by-updating-the-desired-status",children:"Start the pipeline asynchronously by updating the desired status."})}),"\n",(0,s.jsxs)(i.p,{children:["The endpoint returns immediately after setting the desired status.\nThe procedure to get to the desired status is performed asynchronously.\nProgress should be monitored by polling the pipeline ",(0,s.jsx)(i.code,{children:"GET"})," endpoints."]}),"\n",(0,s.jsx)(i.p,{children:"Note the following:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["A stopped pipeline can be started through calling ",(0,s.jsx)(i.code,{children:"/start?initial=running"}),",\n",(0,s.jsx)(i.code,{children:"/start?initial=paused"}),", or ",(0,s.jsx)(i.code,{children:"/start?initial=standby"}),"."]}),"\n",(0,s.jsx)(i.li,{children:"If the pipeline is already (being) started (provisioned), it will still return success"}),"\n",(0,s.jsxs)(i.li,{children:["It is not possible to call ",(0,s.jsx)(i.code,{children:"/start"})," when the pipeline has already had ",(0,s.jsx)(i.code,{children:"/stop"})," called and is\nin the process of suspending or stopping."]}),"\n"]}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{style:{textAlign:"left"},children:"Path Parameters"})})}),(0,s.jsx)("tbody",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"pipeline_name"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(i.p,{children:"Unique pipeline name"})})]})})})]}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{style:{textAlign:"left"},children:"Query Parameters"})})}),(0,s.jsx)("tbody",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"initial"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"initial"})," parameter determines whether to after provisioning the pipeline make it\nbecome ",(0,s.jsx)(i.code,{children:"standby"}),", ",(0,s.jsx)(i.code,{children:"paused"})," or ",(0,s.jsx)(i.code,{children:"running"})," (only valid values)."]})})]})})})]}),"\n",(0,s.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{style:{textAlign:"left"},children:"Responses"})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsxs)("div",{style:{display:"flex"},children:[(0,s.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)("code",{children:"202"})}),(0,s.jsx)("div",{children:(0,s.jsx)(i.p,{children:"Action is accepted and is being performed"})})]}),(0,s.jsx)("div",{})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsxs)("div",{style:{display:"flex"},children:[(0,s.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)("code",{children:"400"})}),(0,s.jsx)("div",{children:(0,s.jsx)(i.p,{children:"Action could not be performed"})})]}),(0,s.jsx)("div",{children:(0,s.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("th",{style:{textAlign:"left"},children:[(0,s.jsx)("span",{children:"Schema "}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,s.jsx)("div",{})]})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"details"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" object"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsxs)(i.p,{children:["Detailed error metadata.\nThe contents of this field is determined by ",(0,s.jsx)(i.code,{children:"error_code"}),"."]})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"error_code"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(i.p,{children:"Error code is a string that specifies this error type."})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"message"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(i.p,{children:"Human-readable error message."})})]})})]})]})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsxs)("div",{style:{display:"flex"},children:[(0,s.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)("code",{children:"404"})}),(0,s.jsx)("div",{children:(0,s.jsx)(i.p,{children:"Pipeline with that name does not exist"})})]}),(0,s.jsx)("div",{children:(0,s.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("th",{style:{textAlign:"left"},children:[(0,s.jsx)("span",{children:"Schema "}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,s.jsx)("div",{})]})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"details"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" object"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsxs)(i.p,{children:["Detailed error metadata.\nThe contents of this field is determined by ",(0,s.jsx)(i.code,{children:"error_code"}),"."]})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"error_code"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(i.p,{children:"Error code is a string that specifies this error type."})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"message"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(i.p,{children:"Human-readable error message."})})]})})]})]})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsxs)("div",{style:{display:"flex"},children:[(0,s.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)("code",{children:"500"})}),(0,s.jsx)("div",{})]}),(0,s.jsx)("div",{children:(0,s.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,s.jsx)("thead",{children:(0,s.jsx)("tr",{children:(0,s.jsxs)("th",{style:{textAlign:"left"},children:[(0,s.jsx)("span",{children:"Schema "}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,s.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,s.jsx)("div",{})]})})}),(0,s.jsxs)("tbody",{children:[(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"details"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" object"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsxs)(i.p,{children:["Detailed error metadata.\nThe contents of this field is determined by ",(0,s.jsx)(i.code,{children:"error_code"}),"."]})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"error_code"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(i.p,{children:"Error code is a string that specifies this error type."})})]})}),(0,s.jsx)("tr",{children:(0,s.jsxs)("td",{children:[(0,s.jsx)("code",{children:"message"}),(0,s.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,s.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,s.jsx)(i.p,{children:"Human-readable error message."})})]})})]})]})})]})})]})]})]})}function c(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);