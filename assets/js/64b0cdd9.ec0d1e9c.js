"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[9739],{15792:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"connectors/sources/file","title":"File input connector","description":"The file input connector reads a file local to the machine that runs the","source":"@site/docs/connectors/sources/file.md","sourceDirName":"connectors/sources","slug":"/connectors/sources/file","permalink":"/connectors/sources/file","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Data Generator","permalink":"/connectors/sources/datagen"},"next":{"title":"Output connectors","permalink":"/connectors/sinks/"}}');var o=t(74848),c=t(28453);const r={},s="File input connector",l={},a=[{value:"File input connector configuration",id:"file-input-connector-configuration",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"file-input-connector",children:"File input connector"})}),"\n",(0,o.jsx)(n.p,{children:"The file input connector reads a file local to the machine that runs the\npipeline.  The file input connector is unlikely to be useful in a\nKubernetes-based cloud deployment, where the pipeline runs in an isolated\ncontainer, but it can sometimes be valuable outside of these environments."}),"\n",(0,o.jsxs)(n.p,{children:["The file input connector supports ",(0,o.jsx)(n.a,{href:"/pipelines/fault-tolerance",children:"fault\ntolerance"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"file-input-connector-configuration",children:"File input connector configuration"}),"\n",(0,o.jsx)(n.p,{children:"The file connector has the following configuration parameters:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"path"}),": The file to read, which may be specified as a filename or a ",(0,o.jsx)(n.code,{children:"file://"}),"\nURL.  In either case, it should use an absolute path.  Required."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"buffer_size_byte"}),": The number of bytes of the file to read at one time.\nOptional."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"follow"}),": If false (the default), the file input connector will read the file\nto its end and then stop.  If true, after reading the file's initial\ncontents, the connector will watch for additional data appended to the file\nand continue to read it."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsxs)(n.p,{children:["The following reads a file named ",(0,o.jsx)(n.code,{children:"/tmp/input.txt"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE stocks (\n    symbol VARCHAR NOT NULL,\n    price DECIMAL(38, 2) NOT NULL\n) with (\n  \'connectors\' = \'[{\n    "transport": {\n      "name": "file_input",\n      "config": {\n        "path": "/tmp/input.txt"\n      }\n    },\n    "format": { "name": "csv" }\n  }]\'\n);\n'})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var i=t(96540);const o={},c=i.createContext(o);function r(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);