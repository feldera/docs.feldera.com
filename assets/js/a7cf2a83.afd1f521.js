"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[36],{9318:(e,i,t)=>{t.r(i),t.d(i,{contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"type":"api","id":"retrieve-logs-of-a-pipeline-as-a-stream","title":"Retrieve logs of a pipeline as a stream.","description":"","slug":"/retrieve-logs-of-a-pipeline-as-a-stream","frontMatter":{},"api":{"tags":["Pipeline interaction"],"description":"The logs stream catches up to the extent of the internally configured per-pipeline\\ncircular logs buffer (limited to a certain byte size and number of lines, whichever\\nis reached first). After the catch-up, new lines are pushed whenever they become\\navailable.\\n\\nIt is possible for the logs stream to end prematurely due to the API server temporarily losing\\nconnection to the runner. In this case, it is needed to issue again a new request to this\\nendpoint.\\n\\nThe logs stream will end when the pipeline is deleted, or if the runner restarts. Note that in\\nboth cases the logs will be cleared.","operationId":"get_pipeline_logs","parameters":[{"name":"pipeline_name","in":"path","description":"Unique pipeline name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Pipeline logs retrieved successfully","content":{"text/plain":{"schema":{"type":"string","format":"binary"}}}},"404":{"description":"Pipeline with that name does not exist","content":{"application/json":{"schema":{"type":"object","description":"Information returned by REST API endpoints on error.","required":["message","error_code","details"],"properties":{"details":{"type":"object","description":"Detailed error metadata.\\nThe contents of this field is determined by `error_code`."},"error_code":{"type":"string","description":"Error code is a string that specifies this error type.","example":"CodeSpecifyingErrorType"},"message":{"type":"string","description":"Human-readable error message.","example":"Explanation of the error that occurred."}}},"example":{"message":"Unknown pipeline name \'non-existent-pipeline\'","error_code":"UnknownPipelineName","details":{"pipeline_name":"non-existent-pipeline"}}}}},"500":{"description":"","content":{"application/json":{"schema":{"type":"object","description":"Information returned by REST API endpoints on error.","required":["message","error_code","details"],"properties":{"details":{"type":"object","description":"Detailed error metadata.\\nThe contents of this field is determined by `error_code`."},"error_code":{"type":"string","description":"Error code is a string that specifies this error type.","example":"CodeSpecifyingErrorType"},"message":{"type":"string","description":"Human-readable error message.","example":"Explanation of the error that occurred."}}}}}},"503":{"description":"","content":{"application/json":{"schema":{"type":"object","description":"Information returned by REST API endpoints on error.","required":["message","error_code","details"],"properties":{"details":{"type":"object","description":"Detailed error metadata.\\nThe contents of this field is determined by `error_code`."},"error_code":{"type":"string","description":"Error code is a string that specifies this error type.","example":"CodeSpecifyingErrorType"},"message":{"type":"string","description":"Human-readable error message.","example":"Explanation of the error that occurred."}}},"examples":{"Runner response timeout":{"value":{"message":"Unable to reach pipeline runner to interact due to: timeout (10s) was reached: this means the pipeline took too long to respond -- this can simply be because the request was too difficult to process in time, or other reasons (e.g., deadlock): the pipeline logs might contain additional information (original send request error: Timeout while waiting for response)","error_code":"RunnerInteractionUnreachable","details":{"error":"timeout (10s) was reached: this means the pipeline took too long to respond -- this can simply be because the request was too difficult to process in time, or other reasons (e.g., deadlock): the pipeline logs might contain additional information (original send request error: Timeout while waiting for response)"}}}}}}}},"security":[{"JSON web token (JWT) or API key":[]}],"method":"get","path":"/v0/pipelines/{pipeline_name}/logs","securitySchemes":{"JSON web token (JWT) or API key":{"type":"http","scheme":"bearer","bearerFormat":"JWT","description":"Use a JWT token obtained via an OAuth2/OIDC\\n                               login workflow or an API key obtained via\\n                               the `/v0/api-keys` endpoint."}},"info":{"title":"Feldera API","description":"\\nWith Feldera, users create data pipelines out of SQL programs.\\nA SQL program comprises tables and views, and includes as well the definition of\\ninput and output connectors for each respectively. A connector defines a data\\nsource or data sink to feed input data into tables or receive output data\\ncomputed by the views respectively.\\n\\n## Pipeline\\n\\nThe API is centered around the **pipeline**, which most importantly consists\\nout of the SQL program, but also has accompanying metadata and configuration parameters\\n(e.g., compilation profile, number of workers, etc.).\\n\\n* A pipeline is identified and referred to by its user-provided unique name.\\n* The pipeline program is asynchronously compiled when the pipeline is first created or\\n  when its program is subsequently updated.\\n* Pipeline deployment is only possible once the program is successfully compiled.\\n* A pipeline cannot be updated while it is deployed.\\n\\n## Concurrency\\n\\nEach pipeline has a version, which is incremented each time its core fields are updated.\\nThe version is monotonically increasing. There is additionally a program version which covers\\nonly the program-related core fields, and is used by the compiler to discern when to recompile.","contact":{"name":"Feldera Team","email":"dev@feldera.com"},"license":{"name":"MIT OR Apache-2.0"},"version":"0.132.0"},"postman":{"name":"Retrieve logs of a pipeline as a stream.","description":{"content":"The logs stream catches up to the extent of the internally configured per-pipeline\\ncircular logs buffer (limited to a certain byte size and number of lines, whichever\\nis reached first). After the catch-up, new lines are pushed whenever they become\\navailable.\\n\\nIt is possible for the logs stream to end prematurely due to the API server temporarily losing\\nconnection to the runner. In this case, it is needed to issue again a new request to this\\nendpoint.\\n\\nThe logs stream will end when the pipeline is deleted, or if the runner restarts. Note that in\\nboth cases the logs will be cleared.","type":"text/plain"},"url":{"path":["v0","pipelines",":pipeline_name","logs"],"host":["{{baseUrl}}"],"query":[],"variable":[{"disabled":false,"description":{"content":"(Required) Unique pipeline name","type":"text/plain"},"type":"any","value":"<string>","key":"pipeline_name"}]},"header":[{"key":"Accept","value":"text/plain"}],"method":"GET","auth":{"type":"bearer","bearer":[{"type":"any","value":"{{bearerToken}}","key":"token"}]}}},"source":"@site/../openapi.json","sourceDirName":".","permalink":"/api/retrieve-logs-of-a-pipeline-as-a-stream","previous":{"title":"Push data to a SQL table.","permalink":"/api/push-data-to-a-sql-table"},"next":{"title":"Retrieve circuit metrics of a running or paused pipeline.","permalink":"/api/retrieve-circuit-metrics-of-a-running-or-paused-pipeline"}}');var n=t(74848),s=t(28453);const a={},o="Retrieve logs of a pipeline as a stream.",l=[];function d(e){const i={code:"code",h1:"h1",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"retrieve-logs-of-a-pipeline-as-a-stream",children:"Retrieve logs of a pipeline as a stream."})}),"\n",(0,n.jsx)(i.p,{children:"The logs stream catches up to the extent of the internally configured per-pipeline\ncircular logs buffer (limited to a certain byte size and number of lines, whichever\nis reached first). After the catch-up, new lines are pushed whenever they become\navailable."}),"\n",(0,n.jsx)(i.p,{children:"It is possible for the logs stream to end prematurely due to the API server temporarily losing\nconnection to the runner. In this case, it is needed to issue again a new request to this\nendpoint."}),"\n",(0,n.jsx)(i.p,{children:"The logs stream will end when the pipeline is deleted, or if the runner restarts. Note that in\nboth cases the logs will be cleared."}),"\n",(0,n.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,n.jsx)("thead",{children:(0,n.jsx)("tr",{children:(0,n.jsx)("th",{style:{textAlign:"left"},children:"Path Parameters"})})}),(0,n.jsx)("tbody",{children:(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"pipeline_name"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,n.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"},children:" REQUIRED"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)(i.p,{children:"Unique pipeline name"})})]})})})]}),"\n",(0,n.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,n.jsx)("thead",{children:(0,n.jsx)("tr",{children:(0,n.jsx)("th",{style:{textAlign:"left"},children:"Responses"})})}),(0,n.jsxs)("tbody",{children:[(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsxs)("div",{style:{display:"flex"},children:[(0,n.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)("code",{children:"200"})}),(0,n.jsx)("div",{children:(0,n.jsx)(i.p,{children:"Pipeline logs retrieved successfully"})})]}),(0,n.jsx)("div",{children:(0,n.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,n.jsx)("thead",{children:(0,n.jsx)("tr",{children:(0,n.jsxs)("th",{style:{textAlign:"left"},children:[(0,n.jsx)("span",{children:"Schema "}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,n.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,n.jsx)("div",{})]})})}),(0,n.jsx)("tbody",{children:(0,n.jsx)("tr",{children:(0,n.jsx)("td",{children:(0,n.jsx)("span",{style:{opacity:"0.6"},children:" string"})})})})]})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsxs)("div",{style:{display:"flex"},children:[(0,n.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)("code",{children:"404"})}),(0,n.jsx)("div",{children:(0,n.jsx)(i.p,{children:"Pipeline with that name does not exist"})})]}),(0,n.jsx)("div",{children:(0,n.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,n.jsx)("thead",{children:(0,n.jsx)("tr",{children:(0,n.jsxs)("th",{style:{textAlign:"left"},children:[(0,n.jsx)("span",{children:"Schema "}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,n.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,n.jsx)("div",{})]})})}),(0,n.jsxs)("tbody",{children:[(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"details"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" object"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsxs)(i.p,{children:["Detailed error metadata.\nThe contents of this field is determined by ",(0,n.jsx)(i.code,{children:"error_code"}),"."]})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"error_code"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)(i.p,{children:"Error code is a string that specifies this error type."})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"message"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)(i.p,{children:"Human-readable error message."})})]})})]})]})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsxs)("div",{style:{display:"flex"},children:[(0,n.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)("code",{children:"500"})}),(0,n.jsx)("div",{})]}),(0,n.jsx)("div",{children:(0,n.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,n.jsx)("thead",{children:(0,n.jsx)("tr",{children:(0,n.jsxs)("th",{style:{textAlign:"left"},children:[(0,n.jsx)("span",{children:"Schema "}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,n.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,n.jsx)("div",{})]})})}),(0,n.jsxs)("tbody",{children:[(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"details"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" object"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsxs)(i.p,{children:["Detailed error metadata.\nThe contents of this field is determined by ",(0,n.jsx)(i.code,{children:"error_code"}),"."]})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"error_code"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)(i.p,{children:"Error code is a string that specifies this error type."})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"message"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)(i.p,{children:"Human-readable error message."})})]})})]})]})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsxs)("div",{style:{display:"flex"},children:[(0,n.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)("code",{children:"503"})}),(0,n.jsx)("div",{})]}),(0,n.jsx)("div",{children:(0,n.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,n.jsx)("thead",{children:(0,n.jsx)("tr",{children:(0,n.jsxs)("th",{style:{textAlign:"left"},children:[(0,n.jsx)("span",{children:"Schema "}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,n.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,n.jsx)("div",{})]})})}),(0,n.jsxs)("tbody",{children:[(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"details"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" object"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsxs)(i.p,{children:["Detailed error metadata.\nThe contents of this field is determined by ",(0,n.jsx)(i.code,{children:"error_code"}),"."]})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"error_code"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)(i.p,{children:"Error code is a string that specifies this error type."})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"message"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)(i.p,{children:"Human-readable error message."})})]})})]})]})})]})})]})]})]})}function c(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>o});var r=t(96540);const n={},s=r.createContext(n);function a(e){const i=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(s.Provider,{value:i},e.children)}}}]);