"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[8551],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(96540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}},80333:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"connectors/sources/nats","title":"NATS input connector","description":"Feldera can consume a stream of changes to a SQL table from NATS JetStream","source":"@site/docs/connectors/sources/nats.md","sourceDirName":"connectors/sources","slug":"/connectors/sources/nats","permalink":"/connectors/sources/nats","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Google Pub/Sub","permalink":"/connectors/sources/pubsub"},"next":{"title":"Debezium","permalink":"/connectors/sources/debezium"}}');var r=t(74848),i=t(28453);const a={},c="NATS input connector",l={},o=[{value:"How it works",id:"how-it-works",level:2},{value:"NATS Input Connector Configuration",id:"nats-input-connector-configuration",level:2},{value:"Connection Options",id:"connection-options",level:3},{value:"Stream Configuration",id:"stream-configuration",level:3},{value:"Consumer Configuration",id:"consumer-configuration",level:3},{value:"Deliver Policy",id:"deliver-policy",level:4},{value:"Replay Policy",id:"replay-policy",level:4},{value:"Authentication",id:"authentication",level:2},{value:"Credentials File Authentication",id:"credentials-file-authentication",level:3},{value:"Setting up NATS JetStream",id:"setting-up-nats-jetstream",level:2},{value:"Running NATS Server with JetStream",id:"running-nats-server-with-jetstream",level:3},{value:"Creating a Stream",id:"creating-a-stream",level:3},{value:"Example usage",id:"example-usage",level:2},{value:"Basic example with raw JSON format",id:"basic-example-with-raw-json-format",level:3},{value:"Only revice messages NATS messages",id:"only-revice-messages-nats-messages",level:3},{value:"Filtering by subject",id:"filtering-by-subject",level:3},{value:"Replaying at original timing",id:"replaying-at-original-timing",level:3},{value:"Additional resources",id:"additional-resources",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"nats-input-connector",children:"NATS input connector"})}),"\n",(0,r.jsxs)(n.p,{children:["Feldera can consume a stream of changes to a SQL table from NATS JetStream\nwith the ",(0,r.jsx)(n.code,{children:"nats_input"})," connector."]}),"\n",(0,r.jsxs)(n.p,{children:["The NATS input connector supports exactly-once ",(0,r.jsx)(n.a,{href:"/pipelines/fault-tolerance",children:"fault\ntolerance"})," using JetStream's ordered pull consumer."]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"NATS support is still experimental, and it may be substantially modified in the future."})}),"\n",(0,r.jsx)(n.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,r.jsxs)(n.p,{children:["The NATS input connector uses JetStream's ",(0,r.jsx)(n.strong,{children:"ordered pull consumer"}),", which provides:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Strict ordering"}),": Messages delivered in exact stream order without gaps."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automatic recovery"}),": On gap detection, heartbeat loss, or deletion, the consumer automatically recreates itself and resumes from the last processed position"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Exactly-once semantics"}),": Combined with Feldera's checkpoint mechanism, ensures each message is processed exactly once"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"nats-input-connector-configuration",children:"NATS Input Connector Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The connector configuration consists of three main sections:"}),"\n",(0,r.jsx)(n.h3,{id:"connection-options",children:"Connection Options"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"server_url"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:["NATS server URL (e.g., ",(0,r.jsx)(n.code,{children:"nats://localhost:4222"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"auth"})}),(0,r.jsx)(n.td,{children:"object"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsxs)(n.td,{children:["Authentication configuration (see ",(0,r.jsx)(n.a,{href:"#authentication",children:"Authentication"}),")"]})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"stream-configuration",children:"Stream Configuration"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"stream_name"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsx)(n.td,{children:"The name of the NATS JetStream stream to consume from"})]})})]}),"\n",(0,r.jsx)(n.h3,{id:"consumer-configuration",children:"Consumer Configuration"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"name"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Consumer name for identification"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"description"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Consumer description"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"filter_subjects"})}),(0,r.jsx)(n.td,{children:"string list"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Filter messages by subject(s). If empty, consumes all subjects in the stream"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"replay_policy"})}),(0,r.jsx)(n.td,{children:"variant"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsxs)(n.td,{children:["Message replay speed: ",(0,r.jsx)(n.code,{children:'"Instant"'})," (default, fast) or ",(0,r.jsx)(n.code,{children:'"Original"'})," (rate-limited at original timing)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"rate_limit"})}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Rate limit in bytes per second. Default: 0 (unlimited)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"deliver_policy"})}),(0,r.jsx)(n.td,{children:"variant"}),(0,r.jsx)(n.td,{children:"Yes"}),(0,r.jsxs)(n.td,{children:["Starting point for reading from the stream (see ",(0,r.jsx)(n.a,{href:"#deliver-policy",children:"Deliver Policy"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"max_waiting"})}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Maximum outstanding pull requests. Default: 0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"metadata"})}),(0,r.jsx)(n.td,{children:"map (string \u2192 string)"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Consumer metadata key-value pairs"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"max_batch"})}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Maximum messages per batch"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"max_bytes"})}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Maximum bytes per batch"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"max_expires"})}),(0,r.jsx)(n.td,{children:"duration"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Maximum duration for pull requests"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"deliver-policy",children:"Deliver Policy"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"deliver_policy"})," field determines where in the stream to start consuming messages:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"All"'})," - Start from the earliest available message in the stream"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"Last"'})," - Start from the last message in the stream"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"New"'})," - Start from new messages only (messages arriving after consumer creation)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"LastPerSubject"'})," - Start with the last message for all subjects received (useful for KV-like workloads)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'{"ByStartSequence": {"start_sequence": 100}}'})," - Start from a specific sequence number"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'{"ByStartTime": {"start_time": "2024-01-01T12:00:00Z"}}'})," - Start from messages at or after the specified timestamp (RFC 3339 format)"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"replay-policy",children:"Replay Policy"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"replay_policy"})," field controls how fast messages are delivered to the consumer:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"Instant"'})," (default) - Delivers messages as quickly as possible. Use for maximum throughput in production workloads."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"Original"'})," - Delivers messages at the rate they were originally received, preserving the timing between messages. Useful for:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Replaying production traffic patterns in test/staging environments"}),"\n",(0,r.jsx)(n.li,{children:"Load testing with realistic timing"}),"\n",(0,r.jsx)(n.li,{children:"Debugging scenarios where message timing matters"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If not specified, defaults to ",(0,r.jsx)(n.code,{children:'"Instant"'}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,r.jsxs)(n.p,{children:["The NATS connector currently supports credentials-based authentication through the ",(0,r.jsx)(n.code,{children:"auth"})," object."]}),"\n",(0,r.jsx)(n.h3,{id:"credentials-file-authentication",children:"Credentials File Authentication"}),"\n",(0,r.jsx)(n.p,{children:"Use a credentials file containing JWT and NKey seed:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "credentials": {\n    "FromFile": "/path/to/credentials.creds"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Or provide credentials directly as a string:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "credentials": {\n    "FromString": "-----BEGIN NATS USER JWT-----\\n...\\n------END NATS USER JWT------\\n\\n************************* IMPORTANT *************************\\n..."\n  }\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Additional authentication methods (JWT, NKey, token, username/password) are defined in the configuration schema but not yet implemented. Only credentials-based authentication is currently supported."})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["For production environments, it is strongly recommended to use ",(0,r.jsx)(n.a,{href:"/connectors/secret-references",children:"secret references"})," instead of hardcoding credentials in the configuration."]})}),"\n",(0,r.jsx)(n.h2,{id:"setting-up-nats-jetstream",children:"Setting up NATS JetStream"}),"\n",(0,r.jsx)(n.p,{children:"Before using the NATS input connector, you need a NATS server with JetStream enabled and a stream created."}),"\n",(0,r.jsx)(n.h3,{id:"running-nats-server-with-jetstream",children:"Running NATS Server with JetStream"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://nats.io/download/",children:"Download the NATS server binary"})," for your platform. NATS is a small, standalone binary that's easy to install and run."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Run NATS server with JetStream enabled\nnats-server -js\n"})}),"\n",(0,r.jsx)(n.h3,{id:"creating-a-stream",children:"Creating a Stream"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/nats-io/natscli/releases",children:"Download the NATS CLI"})," to manage streams and publish test messages. For other installation methods (Homebrew, package managers), see the ",(0,r.jsx)(n.a,{href:"https://github.com/nats-io/natscli#installation",children:"NATS CLI installation guide"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Once installed, create a stream and publish test messages:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Create a stream\nnats -s localhost:4222 stream add my_texts --subjects "text.>" --defaults\n\n# Publish test messages\nnats -s localhost:4222 pub -J --count 100 text.area.1 \'{"unix": {{UnixNano}}, "text": "{{Random 0 20}}"}\'\n'})}),"\n",(0,r.jsx)(n.h2,{id:"example-usage",children:"Example usage"}),"\n",(0,r.jsx)(n.h3,{id:"basic-example-with-raw-json-format",children:"Basic example with raw JSON format"}),"\n",(0,r.jsxs)(n.p,{children:["Create a NATS input connector that reads from the ",(0,r.jsx)(n.code,{children:"my_texts"})," stream:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE raw_text (\n    unix BIGINT,\n    text STRING\n) WITH (\n    \'append_only\' = \'true\',\n    \'connectors\' = \'[{\n        "name": "my_text",\n        "transport": {\n            "name": "nats_input",\n            "config": {\n                "connection_config": {\n                    "server_url": "nats://localhost:4222"\n                },\n                "stream_name": "my_texts",\n                "consumer_config": {\n                    "deliver_policy": "All"\n                }\n            }\n        },\n        "format": {\n            "name": "json",\n            "config": {\n                "update_format": "raw"\n            }\n        }\n    }]\'\n);\n\nCREATE MATERIALIZED VIEW summary as\n    SELECT\n        len(text) as text_length,\n        (max(unix)/1e6)::TIMESTAMP as last_recived,\n        count(*) as count\n    FROM raw_text\n    GROUP BY text_length\n    ORDER BY text_length;\n'})}),"\n",(0,r.jsx)(n.h3,{id:"only-revice-messages-nats-messages",children:"Only revice messages NATS messages"}),"\n",(0,r.jsxs)(n.p,{children:["If you only want to recive messages published after Feldera pipline start,\nchange ",(0,r.jsx)(n.code,{children:"deliver_policy"})," to ",(0,r.jsx)(n.code,{children:"New"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE raw_text (\n    unix BIGINT,\n    text STRING\n) WITH (\n    \'append_only\' = \'true\',\n    \'connectors\' = \'[{\n        "name": "my_text",\n        "transport": {\n            "name": "nats_input",\n            "config": {\n                "connection_config": {\n                    "server_url": "nats://localhost:4222"\n                },\n                "stream_name": "my_texts",\n                "consumer_config": {\n                    "deliver_policy": "New"\n                }\n            }\n        },\n        "format": {\n            "name": "json",\n            "config": {\n                "update_format": "raw"\n            }\n        }\n    }]\'\n);\n\nCREATE MATERIALIZED VIEW summary as\n    SELECT\n        len(text) as text_length,\n        (max(unix)/1e6)::TIMESTAMP as last_recived,\n        count(*) as count\n    FROM raw_text\n    GROUP BY text_length\n    ORDER BY text_length;\n'})}),"\n",(0,r.jsx)(n.h3,{id:"filtering-by-subject",children:"Filtering by subject"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"filter_subjects"})," to only conssume messages from spesific subjects ",(0,r.jsx)(n.code,{children:"text.area.2"})," and ",(0,r.jsx)(n.code,{children:"text.*.3"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE raw_text (\n    unix BIGINT,\n    text STRING\n) WITH (\n    \'append_only\' = \'true\',\n    \'connectors\' = \'[{\n        "name": "my_text",\n        "transport": {\n            "name": "nats_input",\n            "config": {\n                "connection_config": {\n                    "server_url": "nats://localhost:4222"\n                },\n                "stream_name": "my_texts",\n                "consumer_config": {\n                    "deliver_policy": "All",\n                     "filter_subjects": ["text.area.2", "text.*.3"]\n                }\n            }\n        },\n        "format": {\n            "name": "json",\n            "config": {\n                "update_format": "raw"\n            }\n        }\n    }]\'\n);\n\nCREATE MATERIALIZED VIEW summary as\n    SELECT\n        len(text) as text_length,\n        (max(unix)/1e6)::TIMESTAMP as last_recived,\n        count(*) as count\n    FROM raw_text\n    GROUP BY text_length\n    ORDER BY text_length;\n'})}),"\n",(0,r.jsx)(n.h3,{id:"replaying-at-original-timing",children:"Replaying at original timing"}),"\n",(0,r.jsxs)(n.p,{children:["You can use ",(0,r.jsx)(n.code,{children:'"Original"'})," replay policy to replay production traffic in a test environment with realistic timing:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE raw_text (\n    unix BIGINT,\n    text STRING\n) WITH (\n    \'append_only\' = \'true\',\n    \'connectors\' = \'[{\n        "name": "my_text",\n        "transport": {\n            "name": "nats_input",\n            "config": {\n                "connection_config": {\n                    "server_url": "nats://localhost:4222"\n                },\n                "stream_name": "my_texts",\n                "consumer_config": {\n                    "deliver_policy": "All",\n                    "replay_policy": "Original"\n                }\n            }\n        },\n        "format": {\n            "name": "json",\n            "config": {\n                "update_format": "raw"\n            }\n        }\n    }]\'\n);\n\nCREATE MATERIALIZED VIEW summary as\n    SELECT\n        len(text) as text_length,\n        (max(unix)/1e6)::TIMESTAMP as last_recived,\n        count(*) as count\n    FROM raw_text\n    GROUP BY text_length\n    ORDER BY text_length;\n'})}),"\n",(0,r.jsx)(n.h2,{id:"additional-resources",children:"Additional resources"}),"\n",(0,r.jsx)(n.p,{children:"For more information, see:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/connectors/",children:"Top-level connector documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/pipelines/fault-tolerance",children:"Fault tolerance"})}),"\n",(0,r.jsxs)(n.li,{children:["Data formats such as ",(0,r.jsx)(n.a,{href:"/formats/json",children:"JSON"})," and ",(0,r.jsx)(n.a,{href:"/formats/csv",children:"CSV"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.nats.io/nats-concepts/jetstream",children:"NATS JetStream documentation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.nats.io/using-nats/developer/develop_jetstream/consumers#orderedconsumer",children:"NATS Ordered Consumer documentation"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);