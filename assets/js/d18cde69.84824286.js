"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[3835],{28453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>c});var n=s(96540);const r={},i=n.createContext(r);function d(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(i.Provider,{value:t},e.children)}},65716:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"connectors/sources/iceberg","title":"Apache Iceberg input connector","description":"This page describes configuration options specific to the Apache Iceberg connector.","source":"@site/docs/connectors/sources/iceberg.md","sourceDirName":"connectors/sources","slug":"/connectors/sources/iceberg","permalink":"/connectors/sources/iceberg","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Delta Lake","permalink":"/connectors/sources/delta"},"next":{"title":"Kafka","permalink":"/connectors/sources/kafka"}}');var r=s(74848),i=s(28453);const d={},c="Apache Iceberg input connector",l={},o=[{value:"Configuration",id:"configuration",level:2},{value:"Rest catalog configuration",id:"rest-catalog-configuration",level:3},{value:"Glue catalog configuration",id:"glue-catalog-configuration",level:3},{value:"FileIO configuration",id:"fileio-configuration",level:3},{value:"S3 FileIO configuration",id:"s3-fileio-configuration",level:4},{value:"GCS FileIO configuration",id:"gcs-fileio-configuration",level:4},{value:"Data type mapping",id:"data-type-mapping",level:2},{value:"Examples",id:"examples",level:2},{value:"Read an Iceberg table from S3 through the AWS Glue catalog",id:"read-an-iceberg-table-from-s3-through-the-aws-glue-catalog",level:3},{value:"Read an Iceberg table from S3 through a REST catalog",id:"read-an-iceberg-table-from-s3-through-a-rest-catalog",level:3},{value:"Read an Iceberg table from local file system",id:"read-an-iceberg-table-from-local-file-system",level:3}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"apache-iceberg-input-connector",children:"Apache Iceberg input connector"})}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["This page describes configuration options specific to the Apache Iceberg connector.\nSee ",(0,r.jsx)(t.a,{href:"/connectors/",children:"top-level connector documentation"})," for general information\nabout configuring input and output connectors."]})}),"\n",(0,r.jsx)(t.admonition,{type:"warning",children:(0,r.jsx)(t.p,{children:"Iceberg support is still experimental, and it may be substantially modified in the future."})}),"\n",(0,r.jsx)(t.p,{children:"The Iceberg input connector enables data ingestion from an Apache Iceberg table into\na Feldera pipeline. Currently, the connector supports batch reads, allowing users to\nload a static snapshot of the table. However, it does not yet support ingesting\nincremental changes. Incremental ingestion capabilities are planned for future releases."}),"\n",(0,r.jsx)(t.p,{children:"The connector is compatible with REST and AWS Glue catalogs and also supports direct\ntable reads without a catalog, provided the location of the metadata file. Supported\nstorage systems include S3, GCS, and local file systems."}),"\n",(0,r.jsxs)(t.p,{children:["The Iceberg input connector does not yet support ",(0,r.jsx)(t.a,{href:"/pipelines/fault-tolerance",children:"fault tolerance"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"mode"}),"*"]}),(0,r.jsx)(t.td,{children:"enum"}),(0,r.jsxs)(t.td,{children:["Table read mode. Currently, the only supported mode is ",(0,r.jsx)(t.code,{children:"snapshot"}),", in which the connector reads a snapshot of the table and stops."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"snapshot_filter"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:[(0,r.jsxs)("p",{children:["Optional row filter.  When specified, only rows that satisfy the filter condition are included in the snapshot.  The condition must be a valid SQL Boolean expression that can be used in the ",(0,r.jsx)(t.code,{children:"where"})," clause of the ",(0,r.jsx)(t.code,{children:"select * from snapshot where .."})," query."]}),(0,r.jsxs)("p",{children:[" This option can be used to specify the range of event times to include in the snapshot, e.g.: ",(0,r.jsx)(t.code,{children:"ts BETWEEN TIMESTAMP '2005-01-01 00:00:00' AND TIMESTAMP '2010-12-31 23:59:59'"}),"."]})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"snapshot_id"})}),(0,r.jsx)(t.td,{children:"integer"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)("p",{children:"Optional table snapshot id.  When this option is set, the connector reads the specified snapshot of the table."}),(0,r.jsxs)("p",{children:["Note: at most one of ",(0,r.jsx)(t.code,{children:"version"})," and ",(0,r.jsx)(t.code,{children:"datetime"})," options can be specified.  When neither of the two options is specified, the latest snapshot of the table is used."]})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"datetime"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)("p",{children:'Optional timestamp for the snapshot in the ISO-8601/RFC-3339 format, e.g., "2024-12-09T16:09:53+00:00". When this option is set, the connector reads the version of the table as of the specified point in time (based on the server time recorded in the transaction log, not the event time encoded in the data). '}),(0,r.jsxs)("p",{children:[" Note: at most one of ",(0,r.jsx)(t.code,{children:"version"})," and ",(0,r.jsx)(t.code,{children:"datetime"})," options can be specified.  When neither of the two options is specified, the latest committed version of the table is used."]})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"metadata_location"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:["Location of the table metadata JSON file. This property is used to access an Iceberg table directly, without a catalog. It is mutually exclusive with the ",(0,r.jsx)(t.code,{children:"catalog_type"})," property."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"table_name"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:["Specifies the Iceberg table name within the catalog in the ",(0,r.jsx)(t.code,{children:"namespace.table"})," format. This option is applicable when an Iceberg catalog is configured using the ",(0,r.jsx)(t.code,{children:"catalog_type"})," property."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"catalog_type"})}),(0,r.jsx)(t.td,{children:"enum"}),(0,r.jsxs)(t.td,{children:["Type of the Iceberg catalog used to access the table. Supported options include ",(0,r.jsx)(t.code,{children:"rest"})," and ",(0,r.jsx)(t.code,{children:"glue"}),". This property is mutually exclusive with ",(0,r.jsx)(t.code,{children:"metadata_location"}),"."]})]})]})]}),"\n",(0,r.jsx)(t.p,{children:"[*]: Required fields"}),"\n",(0,r.jsx)(t.h3,{id:"rest-catalog-configuration",children:"Rest catalog configuration"}),"\n",(0,r.jsxs)(t.p,{children:["The following properties are used when ",(0,r.jsx)(t.code,{children:"catalog_type"})," is set to ",(0,r.jsx)(t.code,{children:"rest"})," to configure access to an Iceberg REST catalog."]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"rest.uri"}),"*"]}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"URI identifying the REST catalog server"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rest.warehouse"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"The default location for managed tables created by the catalog."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rest.oauth2-server-uri"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:["Authentication URL to use for client credentials authentication (default: ",(0,r.jsx)(t.code,{children:"uri"})," + ",(0,r.jsx)(t.code,{children:"v1/oauth/tokens"}),")"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rest.credential"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:'Credential to use for OAuth2 credential flow when initializing the catalog. A key and secret pair separated by ":" (key is optional).'})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rest.token"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:["Bearer token value to use for ",(0,r.jsx)(t.code,{children:"Authorization"})," header."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rest.scope"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Desired scope of the requested security token (default: catalog)."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rest.prefix"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:["Customize table storage paths. When combined with the ",(0,r.jsx)(t.code,{children:"warehouse"})," property, the prefix determines how table data is organized within the storage."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rest.audience"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Logical name of target resource or service."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rest.resource"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"URI for the target resource or service."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rest.headers"})}),(0,r.jsx)(t.td,{children:"[(string, string)]"}),(0,r.jsx)(t.td,{children:"Additional HTTP request headers added to each catalog REST API call."})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["[*]: These fields are required when the ",(0,r.jsx)(t.code,{children:"catalog_type"})," property is set to ",(0,r.jsx)(t.code,{children:"rest"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"glue-catalog-configuration",children:"Glue catalog configuration"}),"\n",(0,r.jsxs)(t.p,{children:["The following properties are used when ",(0,r.jsx)(t.code,{children:"catalog_type"})," is set to ",(0,r.jsx)(t.code,{children:"glue"})," to configure access to the AWS Glue catalog."]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"glue.warehouse"}),"*"]}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:["Location for table metadata. Example: ",(0,r.jsx)(t.code,{children:"s3://my-data-warehouse/tables/"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"glue.endpoint"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:["Configure an alternative endpoint of the Glue service for Glue catalog to access. Example: ",(0,r.jsx)(t.code,{children:"https://glue.us-east-1.amazonaws.com"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"glue.access-key-id"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Access key id used to access the Glue catalog."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"glue.secret-access-key"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Secret access key used to access the Glue catalog."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"glue.profile-name"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Profile used to access the Glue catalog."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"glue.region"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Region of the Glue catalog."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"glue.session-token"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Static session token used to access the Glue catalog."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"glue.id"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"The 12-digit ID of the Glue catalog."})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["[*]: These fields are required when the ",(0,r.jsx)(t.code,{children:"catalog_type"})," property is set to ",(0,r.jsx)(t.code,{children:"glue"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"fileio-configuration",children:"FileIO configuration"}),"\n",(0,r.jsx)(t.p,{children:"Iceberg works with the concept of a FileIO which is a pluggable module for reading, writing, and deleting files.\nFeldera currently supports S3, GCS, and file system-based FileIO implementations. The Iceberg connector detects\nthe correct type of FileIO from the prefix of the Iceberg table location:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"s3://"}),", ",(0,r.jsx)(t.code,{children:"s3a://"})," - S3."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"gs://"})," - Google Cloud Storage."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"file://"})," or no prefix - local file system."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"S3 and GCP FileIO implementations require additional configuration options documented below."}),"\n",(0,r.jsx)(t.h4,{id:"s3-fileio-configuration",children:"S3 FileIO configuration"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"glue.warehouse"}),"*"]}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:["Location for table metadata. Example: ",(0,r.jsx)(t.code,{children:"s3://my-data-warehouse/tables/"})]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"s3.access-key-id"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"S3 access key id."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"s3.secret-access-key"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"S3 secret access key."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"s3.endpoint"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Configure an alternative endpoint of the S3 service for the FileIO to access. This could be used to use S3 FileIO with any S3-compatible object storage service that has a different endpoint, or access a private S3 endpoint in a virtual private cloud."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"s3.region"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"S3 region."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"s3.session-token"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"S3 session token. This is required when using temporary credentials."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"s3.allow-anonymous"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:["Set to ",(0,r.jsx)(t.code,{children:'"true"'})," to skip signing requests (e.g., for public buckets)."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"s3.disable-ec2-metadata"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:["Set to ",(0,r.jsx)(t.code,{children:'"true"'})," to skip loading the credential from EC2 metadata (typically used in conjunction with ",(0,r.jsx)(t.code,{children:"s3.allow-anonymous"}),")."]})]})]})]}),"\n",(0,r.jsx)(t.h4,{id:"gcs-fileio-configuration",children:"GCS FileIO configuration"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"gcs.project-id"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Google Cloud Project ID."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"gcs.service.path"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Google Cloud Storage endpoint."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"gcs.no-auth"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsxs)(t.td,{children:["Set to ",(0,r.jsx)(t.code,{children:'"true"'})," to allow unauthenticated requests."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"gcs.credentials-json"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"Google Cloud Storage credentials JSON string, base64 encoded."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"gcs.oauth2.token"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"String representation of the access token used for temporary access."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"data-type-mapping",children:"Data type mapping"}),"\n",(0,r.jsx)(t.p,{children:"The following table lists supported Iceberg data types and corresponding Feldera types."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Iceberg type"}),(0,r.jsx)(t.th,{children:"Feldera SQL type"}),(0,r.jsx)(t.th,{children:"Comment"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"boolean"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"BOOLEAN"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"int"})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"INT"}),"        \xa0"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"long"})}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"BIGINT"}),"     \xa0"]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"float"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"REAL"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"double"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"DOUBLE"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"decimal(P,S)"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"DECIMAL(P, S)"})}),(0,r.jsxs)(t.td,{children:["The largest supported precision ",(0,r.jsx)(t.code,{children:"P"})," is 28."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"date"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"DATE"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"time"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"TIME"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"timestamp"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"TIMESTAMP"})}),(0,r.jsx)(t.td,{children:"Timestamp values are rounded to the nearest millisecond."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"timestamp_ns"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"TIMESTAMP"})}),(0,r.jsx)(t.td,{children:"Timestamp values are rounded to the nearest millisecond."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"STRING"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"fixed(L)"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"BINARY(L)"})}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"binary"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"VARBINARY"})}),(0,r.jsx)(t.td,{})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["Types that are currently not supported include Iceberg's nested data types (",(0,r.jsx)(t.code,{children:"struct"}),"s,\n",(0,r.jsx)(t.code,{children:"list"}),"s and ",(0,r.jsx)(t.code,{children:"map"}),"s), ",(0,r.jsx)(t.code,{children:"uuid"}),", and timestamps with time zone."]}),"\n",(0,r.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(t.h3,{id:"read-an-iceberg-table-from-s3-through-the-aws-glue-catalog",children:"Read an Iceberg table from S3 through the AWS Glue catalog"}),"\n",(0,r.jsxs)(t.p,{children:["Create an Iceberg input connector to read a snapshot of a table stored in an S3 bucket\nthrough the ",(0,r.jsx)(t.a,{href:"https://docs.aws.amazon.com/glue/",children:"AWS Glue Catalog"}),". Note that the connector\nconfiguration specifies separate AWS credentials \u2014 including the access key ID, secret\naccess key, and region \u2014 for the AWS Glue Catalog and the S3 bucket containing the table\ndata. These credentials can either be the same, when using a single IAM identity for both\nservices, or different, when using separate IAM identities."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'create table iceberg_table(\n  id bigint,\n  name STRING,\n  b BOOLEAN,\n  ts TIMESTAMP,\n  dt DATE\n) with (\n    \'materialized\' = \'true\',\n    \'connectors\' = \'[{\n        "transport": {\n            "name": "iceberg_input",\n            "config": {\n                "mode": "snapshot",\n                "glue.warehouse": "s3://feldera-iceberg-test/",\n                "catalog_type": "glue",\n                "table_name": "iceberg_test.test_table",\n                "glue.access-key-id": "<AWS_ACCESS_KEY_ID>",\n                "glue.secret-access-key": "<AWS_SECRET_ACCESS_KEY>",\n                "glue.region": "us-east-1",\n                "s3.access-key-id": "<AWS_ACCESS_KEY_ID>",\n                "s3.secret-access-key": "<AWS_SECRET_ACCESS_KEY>",\n                "s3.region": "us-east-1"\n            }\n        }\n    }]\'\n);\n'})}),"\n",(0,r.jsx)(t.h3,{id:"read-an-iceberg-table-from-s3-through-a-rest-catalog",children:"Read an Iceberg table from S3 through a REST catalog"}),"\n",(0,r.jsxs)(t.p,{children:["Create an Iceberg input connector to read a snapshot of a table stored in an S3 bucket\nthrough a REST catalog running on ",(0,r.jsx)(t.code,{children:"http://127.0.0.1:8181"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'create table iceberg_table(\n  id bigint,\n  name STRING,\n  b BOOLEAN,\n  ts TIMESTAMP,\n  dt DATE\n)\nwith (\n    \'materialized\' = \'true\',\n    \'connectors\' = \'[{\n        "transport": {\n            "name": "iceberg_input",\n            "config": {\n                "mode": "snapshot",\n                "catalog_type": "rest",\n                "table_name": "iceberg_test.test_table",\n                "rest.uri": "http://127.0.0.1:8181",\n                "rest.warehouse": "s3://feldera-iceberg-test/",\n                "s3.access-key-id": "<AWS_ACCESS_KEY_ID>",\n                "s3.secret-access-key": "<AWS_SECRET_ACCESS_KEY>",\n                "s3.region": "us-east-1"\n            }\n        }\n    }]\'\n);\n'})}),"\n",(0,r.jsx)(t.h3,{id:"read-an-iceberg-table-from-local-file-system",children:"Read an Iceberg table from local file system"}),"\n",(0,r.jsxs)(t.p,{children:["Read an Iceberg table from the local file system. Use the specified snapshot id.\nOnly select records with timestamp ",(0,r.jsx)(t.code,{children:"2023-01-01 00:00:00"})," or later."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'create table iceberg_table(\n  id bigint,\n  name STRING,\n  b BOOLEAN,\n  ts TIMESTAMP,\n  dt DATE\n) with (\n    \'materialized\' = \'true\',\n    \'connectors\' = \'[{\n        "transport": {\n            "name": "iceberg_input",\n            "config": {\n                "mode": "snapshot",\n                "metadata_location": "file:///tmp/warehouse/test_table/metadata/00001-26093ae9-b816-40ca-8ca4-05bd445a8a1d.metadata.json",\n                "snapshot_id": 3325185130458326470,\n                "snapshot_filter": "ts >= \'\'2023-01-01 00:00:00\'\'",\n            }\n        }\n    }]\'\n);\n'})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);