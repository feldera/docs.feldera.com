"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[6127],{28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var s=r(96540);const l={},t=s.createContext(l);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),s.createElement(t.Provider,{value:n},e.children)}},38783:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"get-started/enterprise/helm-guide","title":"Helm guide","description":"These instructions explain how to install and run Feldera Enterprise","source":"@site/docs/get-started/enterprise/helm-guide.md","sourceDirName":"get-started/enterprise","slug":"/get-started/enterprise/helm-guide","permalink":"/get-started/enterprise/helm-guide","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Quickstart","permalink":"/get-started/enterprise/quickstart"},"next":{"title":"Kubernetes guides","permalink":"/get-started/enterprise/kubernetes-guides/"}}');var l=r(74848),t=r(28453);const i={},a="Helm guide",c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installing Feldera Enterprise",id:"installing-feldera-enterprise",level:2},{value:"Extra",id:"extra",level:2},{value:"Configure custom database credentials",id:"configure-custom-database-credentials",level:3},{value:"Connect to an external database service",id:"connect-to-an-external-database-service",level:3},{value:"Feldera installation overview",id:"feldera-installation-overview",level:3},{value:"Uninstallation",id:"uninstallation",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Incorrect license",id:"incorrect-license",level:3}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"helm-guide",children:"Helm guide"})}),"\n",(0,l.jsxs)(n.p,{children:["These instructions explain how to install and run ",(0,l.jsx)(n.em,{children:"Feldera Enterprise"}),"\non a Kubernetes cluster. It requires a valid Feldera Enterprise license\n-- please request one at ",(0,l.jsx)(n.code,{children:"learnmore@feldera.com"})," if you are interested."]}),"\n",(0,l.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/",children:(0,l.jsx)(n.strong,{children:"kubectl"})}),": ",(0,l.jsx)(n.code,{children:"kubectl version"})]}),"\n",(0,l.jsx)(n.p,{children:"Used to interact with the Kubernetes cluster"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://helm.sh/docs/intro/install/",children:(0,l.jsx)(n.strong,{children:"helm"})}),": ",(0,l.jsx)(n.code,{children:"helm version"})]}),"\n",(0,l.jsx)(n.p,{children:"Package manager to conveniently manage deployments on Kubernetes"}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Feldera license, notably the ",(0,l.jsx)(n.strong,{children:"account id"})," and ",(0,l.jsx)(n.strong,{children:"license key"}),".\nThey are required in the installation. Please reach out to us at\n",(0,l.jsx)(n.code,{children:"learnmore@feldera.com"})," if you are interested."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["The Feldera Helm chart and Docker images are hosted on\n",(0,l.jsx)(n.a,{href:"https://gallery.ecr.aws/feldera",children:"AWS ECR public registry"}),".\nWe will use the chart and multi-arch images by referring to their online repository\nnaming ",(0,l.jsx)(n.code,{children:"public.ecr.aws/feldera/<image>:<version>"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"installing-feldera-enterprise",children:"Installing Feldera Enterprise"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Kubernetes access:"})," check that your ",(0,l.jsx)(n.code,{children:"kubectl"})," is configured\nto your Kubernetes cluster."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"kubectl cluster-info\nkubectl get namespace\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Installation:"}),"\nwe use our Helm chart, which internally refers to the other images, to\nperform the installation in namespace ",(0,l.jsx)(n.code,{children:"feldera"})," with release name ",(0,l.jsx)(n.code,{children:"feldera"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'ACCOUNT_ID="00000000-0000-0000-0000-000000000000"  # Set to own\nLICENSE_KEY="00000000-0000-0000-0000-000000000000"  # Set to own\n\nhelm upgrade --install feldera \\\n    oci://public.ecr.aws/feldera/feldera-chart --version 0.50.0 \\\n    --namespace feldera --create-namespace \\\n    --set felderaVersion="0.64.0" \\\n    --set felderaAccountId="${ACCOUNT_ID}" \\\n    --set felderaLicenseKey="${LICENSE_KEY}" \\\n    --set felderaDatabaseSecretRef="feldera-db-insecure-secret"\n'})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"Note:"})," the license verification is done by interacting with our online\nlicense server at ",(0,l.jsx)(n.code,{children:"cloud.feldera.com"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"Note:"})," how to configure your own database credentials is explained in\na further section."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Check:"})," check the status of the deployment."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"kubectl get pods -n feldera\n"})}),"\n",(0,l.jsx)(n.p,{children:"... which should output approximately the following:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"NAME                                         READY   STATUS    RESTARTS   AGE\nfeldera-db-0                                 1/1     Running   0          3m9s\nfeldera-kubernetes-runner-6447b8f56d-86j4w   1/1     Running   0          3m9s\nfeldera-compiler-server-0                    1/1     Running   0          3m9s\nfeldera-api-server-c546499bc-wdpkm           1/1     Running   0          3m9s\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,l.jsxs)(n.p,{children:["Interaction with Feldera happens through the API server, which has an associated\nservice named ",(0,l.jsx)(n.code,{children:"<release name>-api-server.<namespace>.svc.cluster.local:8080"}),".\nWith kubectl, this can be port-forwarded to be accessible locally:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"kubectl port-forward -n feldera svc/feldera-api-server 8080:8080\n"})}),"\n",(0,l.jsx)(n.p,{children:"... after which you can (leaving the forwarding running in a terminal):"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Visit Web Console in browser: ",(0,l.jsx)(n.a,{href:"http://127.0.0.1:8080",children:"http://127.0.0.1:8080"})]}),"\n",(0,l.jsxs)(n.li,{children:["Interact with the API: ",(0,l.jsx)(n.a,{href:"http://127.0.0.1:8080/v0/...",children:(0,l.jsx)(n.strong,{children:"http://127.0.0.1:8080/v0/..."})})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"Note:"})," access through kubectl port-forwarding is mostly useful for test and development.\nIn other cases, setting up an ingress (e.g., ",(0,l.jsx)(n.a,{href:"/get-started/enterprise/kubernetes-guides/eks/ingress",children:"in EKS"}),") is likely preferable."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"extra",children:"Extra"}),"\n",(0,l.jsx)(n.h3,{id:"configure-custom-database-credentials",children:"Configure custom database credentials"}),"\n",(0,l.jsx)(n.p,{children:"Instead of the insecure default DB credentials, you can supply your own custom database credentials."}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Secret configuration file:"})," create a file ",(0,l.jsx)(n.code,{children:"feldera-db-secret.yaml"}),"\nwith custom database credentials."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'# Filename: feldera-db-secret.yaml\napiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  name: feldera-db-secret\nstringData:\n  .user: "..."  # Fill in\n  .password: "..."  # Fill in\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Create secret:"})," with the configuration file, create the secret:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"#kubectl create namespace feldera  # If the namespace does not exist yet\nkubectl apply -n feldera -f feldera-db-secret.yaml\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Specify secret during installation:"})," in the ",(0,l.jsx)(n.code,{children:"helm"})," installation command, set\nthe following:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'--set felderaDatabaseSecretRef="feldera-db-secret"\n'})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"Note:"})," it must be a new installation."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"connect-to-an-external-database-service",children:"Connect to an external database service"}),"\n",(0,l.jsx)(n.p,{children:"You can connect to an external PostgreSQL database with the following steps:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Secret configuration file:"})," create a file ",(0,l.jsx)(n.code,{children:"feldera-db-secret.yaml"})," with the ",(0,l.jsx)(n.code,{children:".connection_url"})]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:' # Filename: feldera-db-secret.yaml\n apiVersion: v1\n kind: Secret\n type: Opaque\n metadata:\n   name: feldera-db-secret\n stringData:\n   .connection_url: "postgresql://username:password@db-name.cluster-name.region.rds.amazonaws.com/db_name?sslmode=require"\n'})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Create secret:"})," with the configuration file, create the secret:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"#kubectl create namespace feldera  # If the namespace does not exist yet\nkubectl apply -n feldera -f feldera-db-secret.yaml\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.strong,{children:["Optional: Add the TLS Certificate (",(0,l.jsx)(n.code,{children:".pem"})," file) in a configmap"]}),": We use the Amazon bundled ",(0,l.jsx)(n.code,{children:".pem"})," file\nas an example (in case you want to connect to Amazon RDS):"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"wget https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem\nkubectl create configmap postgres-pem -n feldera --from-file=postgresql-ca.pem=global-bundle.pem\n"})}),"\n",(0,l.jsxs)(n.p,{children:["This step is optional, if no certificate is provided feldera will use the system certificates\n(",(0,l.jsx)(n.code,{children:"ca-certificates"})," package from debian 12) to validate the TLS connection."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"Note:"})," If necessary, you can override the file (",(0,l.jsx)(n.code,{children:"postgresql-ca.pem"}),") and configmap (",(0,l.jsx)(n.code,{children:"postgres-pem"}),")\nnames by adjusting ",(0,l.jsx)(n.code,{children:"postgresTlsCertificateFile"})," and ",(0,l.jsx)(n.code,{children:"postgresTlsConfigMapRef"})," in ",(0,l.jsx)(n.code,{children:"values.yaml"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Specify secret and external postgres configuration during installation:"})," in the ",(0,l.jsx)(n.code,{children:"helm"})," installation command, set\nthe following:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'--set postgresExternal=true\n--set felderaDatabaseSecretRef="feldera-db-secret"\n--set postgresTlsConfigMapRef="postgres-pem"\n'})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.em,{children:"Note:"})," it must be a new installation. If you skip step 3, you must not set the ",(0,l.jsx)(n.code,{children:"postgresTlsConfigMapRef"}),"\nvariable."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"feldera-installation-overview",children:"Feldera installation overview"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Services:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"$ kubectl get svc -n feldera\nNAME                        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)     AGE\nfeldera-kubernetes-runner   ClusterIP   10.43.175.228   <none>        8080/TCP    5m10s\nfeldera-api-server          ClusterIP   10.43.176.120   <none>        8080/TCP    5m10s\nfeldera-db                  ClusterIP   10.43.60.190    <none>        5431/TCP    5m10s\nfeldera-compiler-server     ClusterIP   10.43.60.125    <none>        8085/TCP    5m10s\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Pods:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"$ kubectl get pods -n feldera\nNAME                                         READY   STATUS    RESTARTS   AGE\nfeldera-db-0                                 1/1     Running   0          5m31s\nfeldera-kubernetes-runner-6447b8f56d-86j4w   1/1     Running   0          5m31s\nfeldera-compiler-server-0                    1/1     Running   0          5m31s\nfeldera-api-server-c546499bc-wdpkm           1/1     Running   0          5m31s\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"StatefulSets:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"$ kubectl get sts -n feldera\nNAME                      READY   AGE\nfeldera-db                1/1     5m41s\nfeldera-compiler-server   1/1     5m41s\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Deployments:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"$ kubectl get deployments -n feldera\nNAME                        READY   UP-TO-DATE   AVAILABLE   AGE\nfeldera-kubernetes-runner   1/1     1            1           5m55s\nfeldera-api-server          1/1     1            1           5m55s\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Persistent volume claims:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"$ kubectl get pvc -n feldera\nNAME                                         STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE\ndb-storage-feldera-db-0                      Bound    pvc-a5acb4ef-1d3c-4773-ad42-528657f11c94   20Gi       RWO            local-path     6m11s\ncompiler-storage-feldera-compiler-server-0   Bound    pvc-07369993-c20a-4f8a-abd1-52bf3be413c3   20Gi       RWO            local-path     6m11s\n"})}),"\n",(0,l.jsx)(n.h3,{id:"uninstallation",children:"Uninstallation"}),"\n",(0,l.jsxs)(n.p,{children:["If you installed Feldera in its own dedicated namespace,\nthe most thorough way to uninstall Feldera is to delete the entire namespace:\n",(0,l.jsx)(n.code,{children:"kubectl delete namespace feldera"})]}),"\n",(0,l.jsxs)(n.p,{children:["If you wish to preserve the namespace, it can be uninstalled through\nthe usual ",(0,l.jsx)(n.code,{children:"helm"})," method:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"helm uninstall -n feldera feldera\n"})}),"\n",(0,l.jsx)(n.p,{children:"This does not delete the persistent volumes, which need to be deleted separately:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"kubectl get pvc -n feldera\nkubectl delete pvc -n feldera db-storage-feldera-db-0\nkubectl delete pvc -n feldera compiler-storage-feldera-compiler-server-0\nkubectl get pvc -n feldera\n"})}),"\n",(0,l.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,l.jsx)(n.h3,{id:"incorrect-license",children:"Incorrect license"}),"\n",(0,l.jsx)(n.p,{children:"If an incorrect account id and/or license key was provided, the kubernetes-runner\nwill fail to start:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"$ kubectl get pods -n feldera\nNAME                                         READY   STATUS             RESTARTS     AGE\nfeldera-db-0                                 1/1     Running            0            2m34s\nfeldera-compiler-server-0                    1/1     Running            0            2m34s\nfeldera-kubernetes-runner-854446fb84-rg66z   0/1     CrashLoopBackOff   1 (9s ago)   2m34s\nfeldera-api-server-7bb757f685-jwn5v          1/1     Running            0            2m34s\n"})}),"\n",(0,l.jsx)(n.p,{children:"... and an explanation will be visible in its log:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"$ kubectl logs -n feldera deployment/feldera-kubernetes-runner\n...\nFAIL: license verification failed: a valid license is required for the Enterprise version of Feldera. Please contact Feldera support (support@feldera.com) to resolve this issue.\n...\n"})}),"\n",(0,l.jsxs)(n.p,{children:["To resolve this, provide a correct account id and license key\nduring the ",(0,l.jsx)(n.a,{href:"#installing-feldera-enterprise",children:"helm installation"}),".\nIf you do not have a license, please reach out to us at ",(0,l.jsx)(n.code,{children:"support@feldera.com"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}}}]);