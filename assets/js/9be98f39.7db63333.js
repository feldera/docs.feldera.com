"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[9782],{28453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>o});var r=t(96540);const n={},s=r.createContext(n);function a(e){const i=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(s.Provider,{value:i},e.children)}},61264:(e,i,t)=>{t.r(i),t.d(i,{contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"type":"api","id":"retrieve-the-list-of-api-keys","title":"Retrieve the list of API keys.","description":"","slug":"/retrieve-the-list-of-api-keys","frontMatter":{},"api":{"tags":["API keys"],"operationId":"list_api_keys","responses":{"200":{"description":"API keys retrieved successfully","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","description":"API key descriptor.","required":["id","name","scopes"],"properties":{"id":{"type":"string","format":"uuid","description":"API key identifier."},"name":{"type":"string"},"scopes":{"type":"array","items":{"type":"string","description":"Permission types for invoking API endpoints.","enum":["Read","Write"]}}}}}}}},"500":{"description":"","content":{"application/json":{"schema":{"type":"object","description":"Information returned by REST API endpoints on error.","required":["message","error_code","details"],"properties":{"details":{"type":"object","description":"Detailed error metadata.\\nThe contents of this field is determined by `error_code`."},"error_code":{"type":"string","description":"Error code is a string that specifies this error type.","example":"CodeSpecifyingErrorType"},"message":{"type":"string","description":"Human-readable error message.","example":"Explanation of the error that occurred."}}}}}}},"security":[{"JSON web token (JWT) or API key":[]}],"description":"Retrieve the list of API keys.","method":"get","path":"/v0/api_keys","parameters":[],"securitySchemes":{"JSON web token (JWT) or API key":{"type":"http","scheme":"bearer","bearerFormat":"JWT","description":"Use a JWT token obtained via an OAuth2/OIDC\\n                               login workflow or an API key obtained via\\n                               the `/v0/api-keys` endpoint."}},"info":{"title":"Feldera API","description":"\\nWith Feldera, users create data pipelines out of SQL programs.\\nA SQL program comprises tables and views, and includes as well the definition of\\ninput and output connectors for each respectively. A connector defines a data\\nsource or data sink to feed input data into tables or receive output data\\ncomputed by the views respectively.\\n\\n## Pipeline\\n\\nThe API is centered around the **pipeline**, which most importantly consists\\nout of the SQL program, but also has accompanying metadata and configuration parameters\\n(e.g., compilation profile, number of workers, etc.).\\n\\n* A pipeline is identified and referred to by its user-provided unique name.\\n* The pipeline program is asynchronously compiled when the pipeline is first created or\\n  when its program is subsequently updated.\\n* Pipeline deployment is only possible once the program is successfully compiled.\\n* A pipeline cannot be updated while it is deployed.\\n\\n## Concurrency\\n\\nEach pipeline has a version, which is incremented each time its core fields are updated.\\nThe version is monotonically increasing. There is additionally a program version which covers\\nonly the program-related core fields, and is used by the compiler to discern when to recompile.","contact":{"name":"Feldera Team","email":"dev@feldera.com"},"license":{"name":"MIT OR Apache-2.0"},"version":"0.143.0"},"postman":{"name":"Retrieve the list of API keys.","description":{"type":"text/plain"},"url":{"path":["v0","api_keys"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Accept","value":"application/json"}],"method":"GET","auth":{"type":"bearer","bearer":[{"type":"any","value":"{{bearerToken}}","key":"token"}]}}},"source":"@site/../openapi.json","sourceDirName":".","permalink":"/api/retrieve-the-list-of-api-keys","previous":{"title":"Retrieve authentication provider configuration.","permalink":"/api/retrieve-authentication-provider-configuration"},"next":{"title":"Create a new API key.","permalink":"/api/create-a-new-api-key"}}');var n=t(74848),s=t(28453);const a={},o="Retrieve the list of API keys.",d=[];function l(e){const i={code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"retrieve-the-list-of-api-keys",children:"Retrieve the list of API keys."})}),"\n",(0,n.jsx)(i.p,{children:"Retrieve the list of API keys."}),"\n",(0,n.jsxs)("table",{style:{display:"table",width:"100%"},children:[(0,n.jsx)("thead",{children:(0,n.jsx)("tr",{children:(0,n.jsx)("th",{style:{textAlign:"left"},children:"Responses"})})}),(0,n.jsxs)("tbody",{children:[(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsxs)("div",{style:{display:"flex"},children:[(0,n.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)("code",{children:"200"})}),(0,n.jsx)("div",{children:(0,n.jsx)(i.p,{children:"API keys retrieved successfully"})})]}),(0,n.jsx)("div",{children:(0,n.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,n.jsx)("thead",{children:(0,n.jsx)("tr",{children:(0,n.jsxs)("th",{style:{textAlign:"left"},children:[(0,n.jsx)("span",{children:"Schema "}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,n.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,n.jsx)("div",{})]})})}),(0,n.jsx)("tbody",{children:(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("span",{style:{opacity:"0.6"},children:" object[]"}),(0,n.jsx)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:(0,n.jsxs)("tbody",{children:[(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"id"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" uuid"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)(i.p,{children:"API key identifier."})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"name"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" string"})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"scopes"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" string[]"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Possible values:"})," [",(0,n.jsx)(i.code,{children:"Read"}),", ",(0,n.jsx)(i.code,{children:"Write"}),"]"]})})]})})]})})]})})})]})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsxs)("div",{style:{display:"flex"},children:[(0,n.jsx)("div",{style:{marginRight:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)("code",{children:"500"})}),(0,n.jsx)("div",{})]}),(0,n.jsx)("div",{children:(0,n.jsxs)("table",{style:{display:"table",width:"100%",marginTop:"var(--ifm-table-cell-padding)",marginBottom:"0px"},children:[(0,n.jsx)("thead",{children:(0,n.jsx)("tr",{children:(0,n.jsxs)("th",{style:{textAlign:"left"},children:[(0,n.jsx)("span",{children:"Schema "}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" \u2014 "}),(0,n.jsx)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-optional)"},children:" OPTIONAL"}),(0,n.jsx)("div",{})]})})}),(0,n.jsxs)("tbody",{children:[(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"details"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" object"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsxs)(i.p,{children:["Detailed error metadata.\nThe contents of this field is determined by ",(0,n.jsx)(i.code,{children:"error_code"}),"."]})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"error_code"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)(i.p,{children:"Error code is a string that specifies this error type."})})]})}),(0,n.jsx)("tr",{children:(0,n.jsxs)("td",{children:[(0,n.jsx)("code",{children:"message"}),(0,n.jsx)("span",{style:{opacity:"0.6"},children:" string"}),(0,n.jsx)("div",{style:{marginTop:"var(--ifm-table-cell-padding)"},children:(0,n.jsx)(i.p,{children:"Human-readable error message."})})]})})]})]})})]})})]})]})]})}function c(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);