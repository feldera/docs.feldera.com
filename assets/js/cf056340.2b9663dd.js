"use strict";(self.webpackChunkfeldera_docs=self.webpackChunkfeldera_docs||[]).push([[416],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var r=t(96540);const s={},d=r.createContext(s);function c(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(d.Provider,{value:n},e.children)}},81828:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"formats/parquet","title":"Parquet Format","description":"Feldera can ingest and output data in the Parquet format.","source":"@site/docs/formats/parquet.md","sourceDirName":"formats","slug":"/formats/parquet","permalink":"/formats/parquet","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Avro Format","permalink":"/formats/avro"},"next":{"title":"CSV Format","permalink":"/formats/csv"}}');var s=t(74848),d=t(28453);const c={},a="Parquet Format",i={},l=[{value:"Types",id:"types",level:2},{value:"Example",id:"example",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"parquet-format",children:"Parquet Format"})}),"\n",(0,s.jsxs)(n.p,{children:["Feldera can ingest and output data in the ",(0,s.jsx)(n.a,{href:"https://parquet.apache.org/",children:"Parquet format"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["via ",(0,s.jsxs)(n.a,{href:"/tutorials/basics/part2",children:[(0,s.jsx)(n.code,{children:"ingress"})," and ",(0,s.jsx)(n.code,{children:"egress"})," REST endpoints"]})," by specifying ",(0,s.jsx)(n.code,{children:"?format=parquet"})," in the URL"]}),"\n",(0,s.jsx)(n.li,{children:"as a payload received from or sent to a connector"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"We document the Parquet format and how it interacts with different SQL types in this page."}),"\n",(0,s.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,s.jsxs)(n.p,{children:["The parquet file is expected to be a valid parquet file with a schema. The schema\n(row name and type) must match the table definition in the Feldera pipeline program. We\nuse ",(0,s.jsx)(n.a,{href:"https://arrow.apache.org/",children:"Arrow"})," to specify the data-types in parquet. The following table\nshows the mapping between Feldera SQL types\nand ",(0,s.jsx)(n.a,{href:"https://docs.rs/arrow/latest/arrow/datatypes/enum.DataType.html",children:"Arrow types"}),"."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Feldera SQL Type"}),(0,s.jsx)(n.th,{children:"Apache Arrow Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"BOOLEAN"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Boolean"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"TINYINT"}),", ",(0,s.jsx)(n.code,{children:"SMALLINT"}),", ",(0,s.jsx)(n.code,{children:"INTEGER"}),", ",(0,s.jsx)(n.code,{children:"BIGINT"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Int8"}),", ",(0,s.jsx)(n.code,{children:"Int16"}),", ",(0,s.jsx)(n.code,{children:"Int32"}),", ",(0,s.jsx)(n.code,{children:"Int64"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"FLOAT"}),", ",(0,s.jsx)(n.code,{children:"DOUBLE"}),", ",(0,s.jsx)(n.code,{children:"DECIMAL"})]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"Float32"}),", ",(0,s.jsx)(n.code,{children:"Float64"}),", ",(0,s.jsx)(n.code,{children:"Decimal"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"VARCHAR"}),", ",(0,s.jsx)(n.code,{children:"CHAR"}),", ",(0,s.jsx)(n.code,{children:"STRING"})]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"LargeUtf8"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"BINARY"}),", ",(0,s.jsx)(n.code,{children:"VARBINARY"})]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"DataType::Binary"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"TIME"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"DataType::UInt64"})," (time in nanoseconds)"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"TIMESTAMP"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"DataType::Timestamp(TimeUnit::Millisecond, None)"})," (milliseconds since unix epoch)"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"DATE"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"DataType::Int32"})," (days since unix epoch)"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ARRAY"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"DataType::LargeList"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"STRUCT"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"DataType::Struct"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"MAP"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"DataType::Dictionary"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"VARIANT"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"LargeUtf8"})," (JSON-encoded string, see ",(0,s.jsx)(n.a,{href:"/sql/json",children:"VARIANT documentation"}),")"]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:"In this example, we configure a table to load data from a Parquet file."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:'create table PARTS (\n  part bigint not null,\n  vendor bigint not null,\n  price bigint not null\n) with (\'connectors\' = \'[{\n  "transport": {\n    "name": "url_input",\n    "config": { "path": "https://feldera-basics-tutorial.s3.amazonaws.com/parts.parquet" }\n  },\n  "format": {\n    "name": "parquet",\n    "config": {}\n  }\n}]\');\n'})}),"\n",(0,s.jsxs)(n.p,{children:["For reference, the following python script was used to generate the ",(0,s.jsx)(n.code,{children:"parts.parquet"})," file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import pyarrow as pa\nimport pyarrow.parquet as pq\n\ndata = {\n    'PART': [1, 2, 3],\n    'VENDOR': [2, 1, 3],\n    'PRICE': [10000, 15000, 9000]\n}\ntable = pa.Table.from_pydict(data)\npq.write_table(table, 'parts.parquet')\n"})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);